// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ePayments.Tests.Web.Tests.Financial
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("InternalPayment")]
    [NUnit.Framework.CategoryAttribute("InternalPayment")]
    public partial class InternalPaymentFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "InternalPayment.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "InternalPayment", null, ProgrammingLanguage.CSharp, new string[] {
                        "InternalPayment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Внутренний перевод существующему клиенту (валидация+комиссия)")]
        [NUnit.Framework.TestCaseAttribute("70006666697", "1.00", "100.00", "sendmoneynewperson@qa.swiftcom.uk", "72621010Abac", "001-961743", new string[] {
                "2977561"}, Category="2977561")]
        public virtual void ВнутреннийПереводСуществующемуКлиентуВалидацияКомиссия(string receiver, string comission, string amount, string user, string password, string purseId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Внутренний перевод существующему клиенту (валидация+комиссия)", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
  testRunner.Given("User clicks on \"Другому человеку\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table1.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "$ 0.50"});
            table1.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "нет"});
            table1.AddRow(new string[] {
                        "Комиссия:",
                        "$ 1"});
#line 18
  testRunner.Given("User see limits table", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table2.AddRow(new string[] {
                        "USD"});
            table2.AddRow(new string[] {
                        "EUR"});
            table2.AddRow(new string[] {
                        "RUB"});
#line 24
 testRunner.Given("\'Со счета\' selector is \"USD\" and contains:", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table3.AddRow(new string[] {
                        "Кошелек"});
            table3.AddRow(new string[] {
                        "Телефон"});
            table3.AddRow(new string[] {
                        "e-mail"});
#line 30
 testRunner.Given("\'Получатель\' selector is \"Кошелек\" and contains:", ((string)(null)), table3, "Given ");
#line 37
  testRunner.Then("\'Отдаваемая сумма\' set to \'10000000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.Then("User gets message \"Сумма с комиссией превышает баланс\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
  testRunner.Then("\'Отдаваемая сумма\' set to \'0.49\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.Then("User gets message \"Сумма перевода меньше\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
  testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
  testRunner.Then("Section \'Amount including fees\' is: $ 101.00 (Комиссия: $ 1.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
  testRunner.Then("\'Получатель\' selector set to \'Телефон\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
  testRunner.Then(string.Format("\'Получатель\' set to \'{0}\'", receiver), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
  testRunner.Then("\'Детали (необязательно)\' details set to \'Details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table4.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table4.AddRow(new string[] {
                        "Получатель",
                        string.Format("+{0}", receiver)});
            table4.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("$ {0}", amount)});
            table4.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table4.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 101.00"});
            table4.AddRow(new string[] {
                        "Получаемая сумма",
                        "$ 100.00"});
            table4.AddRow(new string[] {
                        "Детали (необязательно)",
                        "Details"});
#line 53
 testRunner.Given("User see table", ((string)(null)), table4, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Внутренний перевод новому клиенту + регистрация нового клиента с получением денег" +
            " (по телефону/email)")]
        [NUnit.Framework.TestCaseAttribute("random", "Phone", "Phone", "-", "Sms", "Телефон", "+70006666697", "1.00", "10.00", "sendmoneynewperson@qa.swiftcom.uk", "efc7a135-33bd-4257-9585-491db78a6e01", "72621010Abac", "1961743", "001-961743", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", "Payment of 10 USD has been received from e-Wallet 001-961743. To receive the fund" +
            "s you need to register or bind phone at ePayments.com, if you have already regis" +
            "tered.", new string[] {
                "135392"}, Category="135392")]
        [NUnit.Framework.TestCaseAttribute("Email", "random", "Email", "New transfer received", "Email", "e-mail", "+70006666697", "1.00", "10.00", "sendmoneynewperson@qa.swiftcom.uk", "efc7a135-33bd-4257-9585-491db78a6e01", "72621010Abac", "1961743", "001-961743", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", "", new string[] {
                "3001909"}, Category="3001909")]
        public virtual void ВнутреннийПереводНовомуКлиентуРегистрацияНовогоКлиентаСПолучениемДенегПоТелефонуEmail(
                    string receiverEmail, 
                    string receiverPhone, 
                    string receiverIdentityType, 
                    string title, 
                    string messageType, 
                    string sendBy, 
                    string receiver, 
                    string comission, 
                    string amount, 
                    string user, 
                    string userId, 
                    string password, 
                    string userPurseId, 
                    string purseId, 
                    string systemPurseId, 
                    string ePS_02TemporaryStoragePurse, 
                    string ePSUserId, 
                    string body, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Внутренний перевод новому клиенту + регистрация нового клиента с получением денег" +
                    " (по телефону/email)", exampleTags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 77
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.Given("Reset Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
  testRunner.Given("User clicks on \"Другому человеку\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
  testRunner.Then(string.Format("\'Получатель\' selector set to \'{0}\'", sendBy), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
  testRunner.Then(string.Format("\'Получатель\' set to random {0}", receiverIdentityType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
  testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
   testRunner.Then(string.Format("Section \'Amount including fees\' is: $ 11.00 (Комиссия: $ {0})", comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table5.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table5.AddRow(new string[] {
                        "Получатель",
                        "**Receiver**"});
            table5.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("$ {0}", amount)});
            table5.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table5.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 11.00"});
            table5.AddRow(new string[] {
                        "Получаемая сумма",
                        string.Format("$ {0}", amount)});
#line 95
  testRunner.Given("User see table", ((string)(null)), table5, "Given ");
#line 103
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
  testRunner.Given("User clicks on \"Подтвердить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table6.AddRow(new string[] {
                        "MassPayment",
                        "+70084361970",
                        string.Format("{0}", userId),
                        "false"});
#line 108
    testRunner.Then("User type SMS sent to:", ((string)(null)), table6, "Then ");
#line 113
  testRunner.Given("User clicks on \"Оплатить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
  testRunner.Then("User gets message \"Обработка платежа займет несколько минут. Дождитесь результата" +
                    " перевода или продолжите работу в личном кабинете\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title",
                        "Body"});
            table7.AddRow(new string[] {
                        string.Format("{0}", messageType),
                        "6",
                        "**Receiver**",
                        string.Format("{0}", title),
                        string.Format("{0}", body)});
#line 118
 testRunner.Then("User selects records in table \'Notification\' for UserId=\"00000000-0000-0000-0000-" +
                    "000000000000\" internal payment", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table8.AddRow(new string[] {
                        "16",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 123
   testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table9.AddRow(new string[] {
                        "WaitingForAutomaticAdmission",
                        "",
                        "WaveCrest",
                        string.Format("{0}", purseId),
                        "WaveCrest",
                        "**Receiver**",
                        "Usd",
                        "EWallet",
                        string.Format("{0}", receiverIdentityType),
                        string.Format("{0}", userId)});
#line 126
   testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\" in" +
                        "ternal payment:", userId), ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table10.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "InternalPaymentForNonClient",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table10.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "InternalPaymentForNonClient",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table10.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table10.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
#line 131
   testRunner.Then(string.Format("New records appears in \'TPurseTransactions\' for UserId=\"{0}\":", userId), ((string)(null)), table10, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table11.AddRow(new string[] {
                        "Usd",
                        "out",
                        "InternalPayment",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        string.Format("{0}", purseId),
                        "Epid"});
#line 140
   testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table11, "Then ");
#line 144
   testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 148
    testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 150
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table12.AddRow(new string[] {
                        "-11.00",
                        "0.00",
                        "0.00"});
#line 152
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table12, "Then ");
#line 156
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table13.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за исходящий внутренний перевод",
                        string.Format("- $ {0}", comission)});
            table13.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        string.Format("- $ {0}", amount)});
#line 157
  testRunner.Given("User see transactions list contains:", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table14.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table14.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table14.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table14.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table14.AddRow(new string[] {
                        "Получатель",
                        "**Receiver**"});
            table14.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table14.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing internal payment to **Receiver** from {0}.", purseId)});
#line 162
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'InternalPaymentCo" +
                        "mmission\' row № 0 direction=\'out\':", userId), ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table15.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table15.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table15.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table15.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table15.AddRow(new string[] {
                        "Получатель",
                        "**Receiver**"});
            table15.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table15.AddRow(new string[] {
                        "Детали",
                        string.Format("Transfer to a new client to **Receiver** from {0}.", purseId)});
#line 172
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'InternalPaymentFo" +
                        "rNonClient\' row № 1 direction=\'out\':", userId), ((string)(null)), table15, "Given ");
#line 183
 testRunner.Given("User LogOut", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 185
 testRunner.Given("User goes to registration page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
 testRunner.Given("User clicks on button \"Продолжить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.Then("\'Имя\' set FirstName to random text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 189
 testRunner.Then("\'Фамилия\' set LastName to random text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 190
 testRunner.Then("User change Country to Россия", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
 testRunner.Then(string.Format("\'Электронная почта\' set to {0} when receiver specify his email", receiverEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 193
 testRunner.Then("\'Пароль\' set to \'72621010Abac\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
 testRunner.Then("\'Дата рождения\' set to \'01.01.1991\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 195
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
 testRunner.Then("Select checkbox \'Я принимаю Правила и условия использования сервиса и Политику ко" +
                    "нфиденциальности\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
 testRunner.Given("User clicks on button \"Регистрация\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient"});
            table16.AddRow(new string[] {
                        "33",
                        "email"});
#line 200
 testRunner.Then("User gets VerificationCode in table \'ConfirmationCodes\' by email:", ((string)(null)), table16, "Then ");
#line 203
 testRunner.Then("\'Ввести код вручную\' set confirmation code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 204
 testRunner.Given("User clicks on button \"Продолжить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
 testRunner.Then("Verification widget appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "KYCId",
                        "UserRole",
                        "State",
                        "IsPep",
                        "PasswordExpireAt"});
            table17.AddRow(new string[] {
                        "1",
                        "185",
                        "Approved",
                        "0",
                        "*today+6month*"});
#line 207
 testRunner.Then("User selects records in \'Users\' for created user:", ((string)(null)), table17, "Then ");
#line 211
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
 testRunner.Then("User clicks on \'Через личный кабинет\' on VerificationWidget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 215
 testRunner.Then(string.Format("\'Номер телефона:\' set to {0} when receiver specify his phone", receiverPhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
 testRunner.Given("User clicks on \"Отправить SMS\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient"});
            table18.AddRow(new string[] {
                        "5",
                        "**Phone**"});
#line 218
 testRunner.Then("User gets VerificationCode in table \'ConfirmationCodes\' by phone:", ((string)(null)), table18, "Then ");
#line 223
 testRunner.Then("\'Код из SMS:\' set confirmation code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 224
 testRunner.Given("User clicks on \"Продолжить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 226
 testRunner.Then("Verification widget contains \'Подтвердите вашу личность\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 227
 testRunner.Then("\'Гражданство:\' citizenship set to \'Россия\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 229
 testRunner.Given("User clicks on \"Общегражданский паспорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
 testRunner.Then("User scrolls down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
 testRunner.Then("\'Серия и номер документа:\' set to \'8811073131\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 233
 testRunner.Then("File \"passport.jpg\" uploaded for verification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 234
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 235
 testRunner.Given("User clicks on \"Продолжить\" on verification widget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
 testRunner.Then("Verification widget contains \'Укажите адрес проживания\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 238
 testRunner.Then("\'Округ/Область:\' set to \'Округ/Область\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 239
 testRunner.Then("\'Город:\' set to \'Казань\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
 testRunner.Then("\'Индекс:\' set to \'424003\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 241
 testRunner.Then("\'Адрес:\' details set to \'ул. Ленина, д.20.кв.17\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 242
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
 testRunner.Given("User clicks on \"Продолжить\" on verification widget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 246
 testRunner.Then("Set select option to \'Cтраница паспорта с адресом регистрации\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 247
 testRunner.Then("User scrolls down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 249
 testRunner.Then("File \"3.jpg\" uploaded for verification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 251
 testRunner.Given("User clicks on \"Отправить заявку\" on verification widget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 253
 testRunner.Then("Verification widget contains \'Заявка на верификацию принята\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 256
 testRunner.Then("Operator set address verified for created user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 258
 testRunner.Then("Operator set created user as verified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 259
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 260
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 261
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table19.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        string.Format("$ {0}", amount)});
#line 262
  testRunner.Given("User see transactions list contains:", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table20.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table20.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table20.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table20.AddRow(new string[] {
                        "Продукт",
                        "e-Wallet **ReceiverPurse**"});
            table20.AddRow(new string[] {
                        "Получатель",
                        "000-406604"});
            table20.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table20.AddRow(new string[] {
                        "Детали",
                        string.Format("Internal payment to {0} from {1}.", receiverIdentityType, purseId)});
#line 267
 testRunner.Given("User see statement info for created user where DestinationId=\'InternalPaymentForN" +
                    "onClient\' row № 0 direction=\'in\' internal payment:", ((string)(null)), table20, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table21.AddRow(new string[] {
                        "Email",
                        "9",
                        "**Receiver**",
                        "Верификация аккаунта"});
            table21.AddRow(new string[] {
                        "Email",
                        "9",
                        "**Receiver**",
                        "Заявка на верификацию принята"});
            table21.AddRow(new string[] {
                        "Email",
                        "9",
                        "**Receiver**",
                        "Контактные данные подтверждены"});
            table21.AddRow(new string[] {
                        "Sms",
                        "1",
                        "**Receiver**",
                        "-"});
#line 277
 testRunner.Then("User selects records in table \'Notification\' for created user with \"**SenderInvoi" +
                    "ceId**\" replacing:", ((string)(null)), table21, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table22.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", user),
                        "Отчет по операции №**Invoice internal payment**"});
            table22.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt61Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzddd7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK33W6kz-29FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table22.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "55954f64ce084e09330cd74a746708cb610c1c10db847ae57c69f58aa2d947e2",
                        "-"});
#line 285
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice i" +
                        "nternal payment**\" replacing:", userId), ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("V2 Перевод с PUSH/SMS подтверждением(существующему физ/биз/пользователю epa)")]
        [NUnit.Framework.TestCaseAttribute("AADD5197-4BF3-426F-A730-2E84822C7CC0", "PushCode", "+70009990027", "001-729570", "+70027804391", "1.00", "10.00", "v2smsinternalpayment@qa.swiftcom.uk", "7d6d9819-9be1-47cd-8193-a4798274d39f", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-063756", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3254400"}, Category="3254400")]
        [NUnit.Framework.TestCaseAttribute("AADD5197-4BF3-426F-A730-2E84822C7CC0", "PushCode", "+70004562152", "000-637140", "+70027804391", "1.00", "10.00", "v2smsinternalpayment@qa.swiftcom.uk", "7d6d9819-9be1-47cd-8193-a4798274d39f", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-063756", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3393745"}, Category="3393745")]
        [NUnit.Framework.TestCaseAttribute("+70027804391", "SMSCode", "+70009990027", "001-729570", "+70027804391", "1.00", "10.00", "v2smsinternalpayment@qa.swiftcom.uk", "7d6d9819-9be1-47cd-8193-a4798274d39f", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-063756", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3254400"}, Category="3254400")]
        [NUnit.Framework.TestCaseAttribute("+70027804391", "SMSCode", "+70004562152", "000-637140", "+70027804391", "1.00", "10.00", "v2smsinternalpayment@qa.swiftcom.uk", "7d6d9819-9be1-47cd-8193-a4798274d39f", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-063756", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3334792"}, Category="3334792")]
        public virtual void V2ПереводСPUSHSMSПодтверждениемСуществующемуФизБизПользователюEpa(
                    string codeRecipient, 
                    string confirmationCode, 
                    string receiver, 
                    string receiverPurse, 
                    string senderPhone, 
                    string comission, 
                    string amount, 
                    string user, 
                    string userId, 
                    string password, 
                    string systemPurseUserId, 
                    string userPurseId, 
                    string senderPurseId, 
                    string systemPurseId, 
                    string ePS_02TemporaryStoragePurse, 
                    string ePSUserId, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("V2 Перевод с PUSH/SMS подтверждением(существующему физ/биз/пользователю epa)", exampleTags);
#line 305
  this.ScenarioSetup(scenarioInfo);
#line 316
    testRunner.Then(string.Format("User updates TransactionConfirmationType=\"{0}\" for UserId=\"{1}\" in table \'TUsers\'" +
                        "", confirmationCode, userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 318
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 319
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 323
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 326
  testRunner.Given("User clicks on \"Другому человеку\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 327
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 328
  testRunner.Then("\'Получатель\' selector set to \'Телефон\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 331
  testRunner.Then(string.Format("\'Получатель\' set to \'{0}\'", receiver), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 332
  testRunner.Then("\'Отдаваемая сумма\' set to \'10.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
   testRunner.Then("Section \'Amount including fees\' is: $ 11.00 (Комиссия: $ 1.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 334
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table23.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", senderPurseId)});
            table23.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", receiver)});
            table23.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "$ 10.00"});
            table23.AddRow(new string[] {
                        "Комиссия",
                        "$ 1.00"});
            table23.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 11.00"});
            table23.AddRow(new string[] {
                        "Получаемая сумма",
                        "$ 10.00"});
#line 335
  testRunner.Given("User see table", ((string)(null)), table23, "Given ");
#line 343
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 344
  testRunner.Given("User clicks on \"Подтвердить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table24.AddRow(new string[] {
                        "MassPayment",
                        string.Format("{0}", codeRecipient),
                        string.Format("{0}", userId),
                        "false"});
#line 346
    testRunner.Then(string.Format("User type {0} sent to:", confirmationCode), ((string)(null)), table24, "Then ");
#line 350
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 352
  testRunner.Given("User clicks on \"Оплатить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 353
  testRunner.Then("User gets message \"Платеж успешно отправлен\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table25.AddRow(new string[] {
                        "16",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 357
   testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table25, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table26.AddRow(new string[] {
                        "Successed",
                        "",
                        "WaveCrest",
                        string.Format("{0}", senderPurseId),
                        "WaveCrest",
                        string.Format("{0}", receiverPurse),
                        "Usd",
                        "EWallet",
                        "Purse",
                        string.Format("{0}", userId)});
#line 360
   testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table27.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "TransferToPurse",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table27.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "TransferToPurse",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table27.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table27.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table27.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table27.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        "406604",
                        "0"});
#line 365
   testRunner.Then(string.Format("New records appears in \'TPurseTransactions\' for UserId=\"{0}\":", userId), ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table28.AddRow(new string[] {
                        "Usd",
                        "out",
                        "InternalPayment",
                        string.Format("{0}", userId),
                        "10.00",
                        "**Generated**",
                        string.Format("{0}", senderPurseId),
                        "Epid"});
#line 375
   testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table28, "Then ");
#line 379
   testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 382
    testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 384
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 385
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table29.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за исходящий внутренний перевод",
                        string.Format("- $ {0}", comission)});
            table29.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Внутренний перевод",
                        string.Format("- $ {0}", amount)});
#line 386
  testRunner.Given("User see transactions list contains:", ((string)(null)), table29, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table30.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table30.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table30.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table30.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table30.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", receiverPurse)});
            table30.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table30.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing internal payment to {0} from {1}.", receiver, senderPurseId)});
#line 391
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'InternalPaymentCo" +
                        "mmission\' row № 0 direction=\'out\':", userId), ((string)(null)), table30, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table31.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table31.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table31.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table31.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table31.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", receiverPurse)});
            table31.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table31.AddRow(new string[] {
                        "Детали",
                        string.Format("Internal payment to {0} from {1}.", receiver, senderPurseId)});
#line 401
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'TransferToPurse\' " +
                        "row № 1 direction=\'out\':", userId), ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table32.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", user),
                        "Отчет по операции №**Invoice**"});
            table32.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt61Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzddd7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK33W6kz-29FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table32.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "55954f64ce084e09330cd74a746708cb610c1c10db847ae57c69f58aa2d947e2",
                        "-"});
#line 412
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Массовый перевод на кошельки")]
        [NUnit.Framework.TestCaseAttribute("+70068002905", "574909", "+70068002905", "08bc4d2d-8276-4e92-b57f-28f9ef9bfc4c", "72621010Abac", "001-399202", "1399202", "10.27", "payment under a contract", "sample@google.com", "5.55", "Agreement no.1", "0.00", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "98D6EFA7-1D17-4E4A-AF84-882D55FE128B", "1100", new string[] {
                "135423"}, Category="135423")]
        public virtual void МассовыйПереводНаКошельки(
                    string paymentCodePhone, 
                    string userPurseId, 
                    string user, 
                    string userId, 
                    string password, 
                    string receiver1, 
                    string receiver1PurseId, 
                    string amount1, 
                    string details1, 
                    string receiver2, 
                    string amount2, 
                    string details2, 
                    string comission, 
                    string systemPurseUserId, 
                    string recieverUserId, 
                    string transfersSystemPurseId, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Массовый перевод на кошельки", exampleTags);
#line 446
this.ScenarioSetup(scenarioInfo);
#line 447
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 448
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 449
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 451
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 452
  testRunner.Given("User clicks on \"Пользователям ePayments\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 454
  testRunner.Then("Section \'Amount including fees\' is: 1 $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "USD",
                        "EUR",
                        "RUB"});
            table33.AddRow(new string[] {
                        "Минимальная сумма каждого перевода с комиссией:",
                        "$ 0.10USD",
                        "€ 0.10EUR",
                        "₽ 1.00RUB"});
            table33.AddRow(new string[] {
                        "Максимальная сумма каждого перевода с комиссией:",
                        "нет",
                        "нет",
                        "нет"});
            table33.AddRow(new string[] {
                        "Комиссия каждого перевода:",
                        "0%",
                        "0%",
                        "0%"});
#line 455
  testRunner.Given("User see limits table in MassPayment", ((string)(null)), table33, "Given ");
#line 460
  testRunner.Then(string.Format("\'Отправитель\' value is \'001-{0}\'", userPurseId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table34.AddRow(new string[] {
                        "Кошелек"});
            table34.AddRow(new string[] {
                        "Телефон"});
            table34.AddRow(new string[] {
                        "e-mail"});
#line 461
  testRunner.Given("\'Получатель\' selector is \"Кошелек\" and contains:", ((string)(null)), table34, "Given ");
#line 466
  testRunner.Then("Placeholder for \'Получатель\' is \'000-000000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 467
  testRunner.Then("\'Получатель\' selector set to \'e-mail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 468
  testRunner.Then("Placeholder for \'Получатель\' is \'Введите e-mail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 469
  testRunner.Then("\'Получатель\' selector set to \'Телефон\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 470
  testRunner.Then("Placeholder for \'Получатель\' is \'Введите номер телефона\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table35.AddRow(new string[] {
                        "USD"});
            table35.AddRow(new string[] {
                        "EUR"});
            table35.AddRow(new string[] {
                        "RUB"});
#line 472
    testRunner.Given("\'Сумма\' selector is \"USD\" and contains:", ((string)(null)), table35, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table36.AddRow(new string[] {
                        "USD"});
            table36.AddRow(new string[] {
                        "EUR"});
            table36.AddRow(new string[] {
                        "RUB"});
#line 477
    testRunner.Given("\'Сумма с комиссией\' selector is \"USD\" and contains:", ((string)(null)), table36, "Given ");
#line 482
  testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 483
  testRunner.Then("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 484
  testRunner.Then("New fieldset appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 485
  testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 486
  testRunner.Then("User clicks on Close", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 488
  testRunner.Then("\'Сумма\' set to \'0.01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 489
  testRunner.Then("Validating message \'Сумма перевода меньше  $ 0.10\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 491
  testRunner.Then("\'Сумма с комиссией\' set to \'10000000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 492
     testRunner.Then("Validating message \'Сумма с комиссией превышает баланс\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 493
     testRunner.Then("\'Сумма с комиссией\' set to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 495
  testRunner.Given("User clicks on \"Загрузка CSV-файла с параметрами платежей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 496
  testRunner.Then("File \"Sample_file_for_mass_internal_payment_negative.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 497
  testRunner.Then("Alert Message \"Line 1: Строка invalid: Номер кошелька указан неверно\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 498
  testRunner.Then("File \"Sample_file_for_mass_internal_payment.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 499
  testRunner.Then(string.Format("Section \'Amount including fees\' is: 2 $ 10.27 + ₽ {0} (Комиссия: $ 0.00 + ₽ 0.00)" +
                        "", amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 500
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table37.AddRow(new string[] {
                        "Отправитель",
                        string.Format("e-Wallet 001-{0}", userPurseId)});
            table37.AddRow(new string[] {
                        "Количество получателей",
                        "2"});
            table37.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ 10.27 + ₽ {0}", amount2)});
            table37.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00 + ₽ 0.00"});
            table37.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ 10.27 + ₽ {0}", amount2)});
#line 501
  testRunner.Given("User see table", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "Amount",
                        "Fees",
                        "Total",
                        "Details"});
            table38.AddRow(new string[] {
                        "1",
                        "001-399202",
                        "$ 10.27",
                        "$ 0.00",
                        "$ 10.27",
                        "payment under a contract"});
            table38.AddRow(new string[] {
                        "2",
                        "sample@google.com (Новый клиент)",
                        string.Format("₽ {0}", amount2),
                        "₽ 0.00",
                        string.Format("₽ {0}", amount2),
                        "Agreement no.1"});
#line 508
  testRunner.Given("User see Receiver table", ((string)(null)), table38, "Given ");
#line 513
  testRunner.Given("User clicks on \"Назад\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 514
  testRunner.Then(string.Format("Section \'Amount including fees\' is: 2 $ 10.27 + ₽ {0} (Комиссия: $ 0.00 + ₽ 0.00)" +
                        "", amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 515
  testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 516
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table39.AddRow(new string[] {
                        "Отправитель",
                        string.Format("e-Wallet 001-{0}", userPurseId)});
            table39.AddRow(new string[] {
                        "Количество получателей",
                        "2"});
            table39.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0} + ₽ {1}", amount1, amount2)});
            table39.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00 + ₽ 0.00"});
            table39.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0} + ₽ {1}", amount1, amount2)});
#line 517
  testRunner.Given("User see table", ((string)(null)), table39, "Given ");
#line 524
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "Amount",
                        "Fees",
                        "Total",
                        "Details"});
            table40.AddRow(new string[] {
                        "1",
                        "001-399202",
                        string.Format("$ {0}", amount1),
                        "$ 0.00",
                        string.Format("$ {0}", amount1),
                        "payment under a contract"});
            table40.AddRow(new string[] {
                        "2",
                        "sample@google.com (Новый клиент)",
                        string.Format("₽ {0}", amount2),
                        "₽ 0.00",
                        string.Format("₽ {0}", amount2),
                        "Agreement no.1"});
#line 525
  testRunner.Given("User see Receiver table", ((string)(null)), table40, "Given ");
#line 530
  testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table41.AddRow(new string[] {
                        "PaymentOperationConfirm",
                        "+70068002905",
                        string.Format("{0}", userId),
                        "false"});
#line 531
    testRunner.Then("User type SMS sent to:", ((string)(null)), table41, "Then ");
#line 534
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 535
  testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 537
  testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 538
  testRunner.Then("Success message \"Платеж успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table42.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table42.AddRow(new string[] {
                        "Отправитель",
                        string.Format("e-Wallet 001-{0}", userPurseId)});
            table42.AddRow(new string[] {
                        "Количество получателей",
                        "2"});
            table42.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0} + ₽ {1}", amount1, amount2)});
            table42.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00 + ₽ 0.00"});
            table42.AddRow(new string[] {
                        "Итого",
                        string.Format("$ {0} + ₽ {1}", amount1, amount2)});
#line 540
  testRunner.Given("User see table", ((string)(null)), table42, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "Amount",
                        "Fees",
                        "Total",
                        "Details"});
            table43.AddRow(new string[] {
                        "1",
                        "001-399202",
                        string.Format("$ {0}", amount1),
                        "$ 0.00",
                        string.Format("$ {0}", amount1),
                        "payment under a contract"});
            table43.AddRow(new string[] {
                        "2",
                        "sample@google.com",
                        string.Format("₽ {0}", amount2),
                        "₽ 0.00",
                        string.Format("₽ {0}", amount2),
                        "Agreement no.1"});
#line 548
  testRunner.Given("User see Receiver table", ((string)(null)), table43, "Given ");
#line 552
  testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 555
  testRunner.Given(string.Format("Check 1 of 2 transaction for last BatchOperationGuid where UserId=\"{0}\" and Recei" +
                        "verIdentity=\"001-399202\"", userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table44.AddRow(new string[] {
                        "16",
                        string.Format("{0}", amount1),
                        string.Format("{0}", comission)});
#line 556
  testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table44, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table45.AddRow(new string[] {
                        "Successed",
                        string.Format("{0}", details1),
                        "WaveCrest",
                        string.Format("001-{0}", userPurseId),
                        "WaveCrest",
                        string.Format("{0}", receiver1),
                        "Usd",
                        "EWallet",
                        "Purse",
                        string.Format("{0}", userId)});
#line 559
  testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table45, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table46.AddRow(new string[] {
                        string.Format("{0}", amount1),
                        "TransferToPurse",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("1{0}", userPurseId),
                        "0"});
            table46.AddRow(new string[] {
                        string.Format("{0}", amount1),
                        "TransferToPurse",
                        "in",
                        string.Format("{0}", recieverUserId),
                        "Usd",
                        string.Format("{0}", receiver1PurseId),
                        "0"});
#line 565
    testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table46, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table47.AddRow(new string[] {
                        "Usd",
                        "out",
                        "InternalPayment",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount1),
                        string.Format("{0}", amount1),
                        string.Format("001-{0}", userPurseId),
                        "Epid"});
            table47.AddRow(new string[] {
                        "Usd",
                        "in",
                        "InternalPayment",
                        string.Format("{0}", recieverUserId),
                        string.Format("{0}", amount1),
                        string.Format("{0}", amount1),
                        string.Format("{0}", receiver1),
                        "Epid"});
#line 571
  testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table47, "Then ");
#line 576
  testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 579
  testRunner.Given("Reset checkers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 581
  testRunner.Given(string.Format("Check 2 of 2 transaction for last BatchOperationGuid where UserId=\"{0}\" and Recei" +
                        "verIdentity=\"sample@google.com\"", userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table48.AddRow(new string[] {
                        "114",
                        string.Format("{0}", amount2),
                        string.Format("{0}", comission)});
#line 582
  testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table48, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table49.AddRow(new string[] {
                        "WaitingForAutomaticAdmission",
                        string.Format("{0}", details2),
                        "WaveCrest",
                        string.Format("001-{0}", userPurseId),
                        "WaveCrest",
                        string.Format("{0}", receiver2),
                        "Rub",
                        "EWallet",
                        "Email",
                        string.Format("{0}", userId)});
#line 585
  testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table49, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table50.AddRow(new string[] {
                        string.Format("{0}", amount2),
                        "InternalPaymentForNonClient",
                        "out",
                        string.Format("{0}", userId),
                        "Rub",
                        string.Format("1{0}", userPurseId),
                        "0"});
            table50.AddRow(new string[] {
                        string.Format("{0}", amount2),
                        "InternalPaymentForNonClient",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Rub",
                        string.Format("{0}", transfersSystemPurseId),
                        "0"});
#line 591
    testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table50, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table51.AddRow(new string[] {
                        "Rub",
                        "out",
                        "InternalPaymentToNewClient",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount2),
                        "**Generated**",
                        string.Format("001-{0}", userPurseId),
                        "Epid"});
#line 597
  testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table51, "Then ");
#line 601
  testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table52.AddRow(new string[] {
                        string.Format("-{0}", amount1),
                        "0.00",
                        string.Format("-{0}", amount2)});
#line 605
     testRunner.Then("eWallet updated sections are:", ((string)(null)), table52, "Then ");
#line 609
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 610
  testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 611
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table53.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        string.Format("- ₽ {0}", amount2)});
            table53.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Внутренний перевод",
                        string.Format("- $ {0}", amount1)});
#line 612
  testRunner.Given("User see transactions list contains:", ((string)(null)), table53, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table54.AddRow(new string[] {
                        "Email",
                        "6",
                        "sample@google.com",
                        "New transfer received"});
#line 616
  testRunner.Then("User selects records in table \'Notification\' for UserId=\"00000000-0000-0000-0000-" +
                    "000000000000\"", ((string)(null)), table54, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table55.AddRow(new string[] {
                        "PushAndroid",
                        "13",
                        "ecAFO1HKm8o:APA91bEWPkpSj7H4ZguawcPhLKZjIPRqDHlsbA6BR394uQ7HAtwGwwpg2UBiUdzY3mzMZ" +
                            "jMHDIAxHqQqruZ95LZGY3rpjssXXkR6hsXVOM_S0gq00NG5bdT22MF5LOMWQ9kM66s2Edw-",
                        "-"});
            table55.AddRow(new string[] {
                        "PushIos",
                        "13",
                        "44a434d54e72c4df41f40a0cdbe362a4bf2a86f9f52ceafd36b7b9573bee2fed",
                        "-"});
#line 623
  testRunner.Then(string.Format("User selects records in table \'Notification\' for UserId=\"{0}\"", userId), ((string)(null)), table55, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("V1 Обработка просроченного внутреннего перевода новому клиенту")]
        [NUnit.Framework.TestCaseAttribute("+70027804391", "SMSCode", "+70004562152", "000-637140", "+70068318139", "1.00", "10.00", "WMmassPayment_bysms@qa.swiftcom.uk", "479a30da-80ce-46bd-be24-810e3e8e7b91", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-359821", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3334792"}, Category="3334792")]
        public virtual void V1ОбработкаПросроченногоВнутреннегоПереводаНовомуКлиенту(
                    string codeRecipient, 
                    string confirmationCode, 
                    string receiver, 
                    string receiverPurse, 
                    string senderPhone, 
                    string comission, 
                    string amount, 
                    string user, 
                    string userId, 
                    string password, 
                    string systemPurseUserId, 
                    string userPurseId, 
                    string senderPurseId, 
                    string systemPurseId, 
                    string ePS_02TemporaryStoragePurse, 
                    string ePSUserId, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("V1 Обработка просроченного внутреннего перевода новому клиенту", exampleTags);
#line 637
this.ScenarioSetup(scenarioInfo);
#line 650
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 651
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 652
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 655
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 658
  testRunner.Given("User clicks on \"Пользователям ePayments\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 659
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 660
  testRunner.Then("\'Получатель\' selector set to \'e-mail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 662
 testRunner.Then("\'Получатель\' set to random Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 665
  testRunner.Then("\'Сумма\' set to \'10.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 666
   testRunner.Then("Section \'Amount including fees\' is: $ 10.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 667
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table56.AddRow(new string[] {
                        "Отправитель",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table56.AddRow(new string[] {
                        "Количество получателей",
                        "1"});
            table56.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table56.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table56.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 10.00"});
#line 668
  testRunner.Given("User see table", ((string)(null)), table56, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "Amount",
                        "Fees",
                        "Total",
                        "Details"});
            table57.AddRow(new string[] {
                        "1",
                        "**Receiver** (Новый клиент)",
                        "$ 10.00",
                        "$ 0.00",
                        "$ 10.00",
                        "-"});
#line 676
 testRunner.Given("User see Receiver table", ((string)(null)), table57, "Given ");
#line 680
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 682
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 683
  testRunner.Given("User clicks on \"Подтвердить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table58.AddRow(new string[] {
                        "PaymentOperationConfirm",
                        string.Format("{0}", senderPhone),
                        string.Format("{0}", userId),
                        "false"});
#line 685
    testRunner.Then("User type SMSCode sent to:", ((string)(null)), table58, "Then ");
#line 689
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 691
  testRunner.Given("User clicks on \"Оплатить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 693
  testRunner.Then("Success message \"Платеж успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table59.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table59.AddRow(new string[] {
                        "Отправитель",
                        "e-Wallet 001-359821"});
            table59.AddRow(new string[] {
                        "Количество получателей",
                        "1"});
            table59.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table59.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table59.AddRow(new string[] {
                        "Итого",
                        "$ 10.00"});
#line 694
 testRunner.Given("User see table", ((string)(null)), table59, "Given ");
#line 703
    testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 705
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 706
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table60.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        "- $ 10.00"});
#line 707
  testRunner.Given("User see transactions list contains:", ((string)(null)), table60, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table61.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table61.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table61.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table61.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table61.AddRow(new string[] {
                        "Получатель",
                        "**Receiver**"});
            table61.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table61.AddRow(new string[] {
                        "Детали",
                        "Transfer to a new client to **Receiver**."});
#line 711
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'InternalPaymentFo" +
                        "rNonClient\' row № 0 direction=\'out\':", userId), ((string)(null)), table61, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table62.AddRow(new string[] {
                        "-10.00",
                        "0.00",
                        "0.00"});
#line 721
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table62, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserId",
                        "PayDate",
                        "CreationDate"});
            table63.AddRow(new string[] {
                        "<Token>",
                        "*today-14d(time 00.00.00)*",
                        "*today-14d(time 00.00.00)*"});
#line 726
 testRunner.Then(string.Format("User updates records in table \'Invoices\' for UserId=\"{0}\":", userId), ((string)(null)), table63, "Then ");
#line 730
 testRunner.When("User download and executes \"Tools.WaitingInvoiceHandler\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 732
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table64.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        "$ 10.00"});
#line 734
 testRunner.Given("User see transactions list contains:", ((string)(null)), table64, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table65.AddRow(new string[] {
                        "+10.00",
                        "0.00",
                        "0.00"});
#line 739
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table65, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Рефанд инвойса внутреннего перевода(V1) из админки")]
        [NUnit.Framework.TestCaseAttribute("+70027804391", "SMSCode", "+70004562152", "000-637140", "+70068318139", "0.00", "10.00", "WMmassPayment_bysms@qa.swiftcom.uk", "479a30da-80ce-46bd-be24-810e3e8e7b91", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-359821", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "433730"}, Category="433730")]
        public virtual void РефандИнвойсаВнутреннегоПереводаV1ИзАдминки(
                    string codeRecipient, 
                    string confirmationCode, 
                    string receiver, 
                    string receiverPurse, 
                    string senderPhone, 
                    string comission, 
                    string amount, 
                    string user, 
                    string userId, 
                    string password, 
                    string systemPurseUserId, 
                    string userPurseId, 
                    string senderPurseId, 
                    string systemPurseId, 
                    string ePS_02TemporaryStoragePurse, 
                    string ePSUserId, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Рефанд инвойса внутреннего перевода(V1) из админки", exampleTags);
#line 753
this.ScenarioSetup(scenarioInfo);
#line 757
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 758
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 759
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 762
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 765
  testRunner.Given("User clicks on \"Пользователям ePayments\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 766
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 767
  testRunner.Then("\'Получатель\' selector set to \'e-mail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 769
 testRunner.Then("\'Получатель\' set to random Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 772
  testRunner.Then("\'Сумма\' set to \'10.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 773
   testRunner.Then("Section \'Amount including fees\' is: $ 10.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 774
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table66.AddRow(new string[] {
                        "Отправитель",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table66.AddRow(new string[] {
                        "Количество получателей",
                        "1"});
            table66.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table66.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table66.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 10.00"});
#line 775
  testRunner.Given("User see table", ((string)(null)), table66, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "Amount",
                        "Fees",
                        "Total",
                        "Details"});
            table67.AddRow(new string[] {
                        "1",
                        "**Receiver** (Новый клиент)",
                        "$ 10.00",
                        "$ 0.00",
                        "$ 10.00",
                        "-"});
#line 783
 testRunner.Given("User see Receiver table", ((string)(null)), table67, "Given ");
#line 787
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 789
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 790
  testRunner.Given("User clicks on \"Подтвердить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table68.AddRow(new string[] {
                        "PaymentOperationConfirm",
                        string.Format("{0}", senderPhone),
                        string.Format("{0}", userId),
                        "false"});
#line 792
    testRunner.Then("User type SMSCode sent to:", ((string)(null)), table68, "Then ");
#line 796
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 798
  testRunner.Given("User clicks on \"Оплатить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 800
  testRunner.Then("Success message \"Платеж успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table69.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table69.AddRow(new string[] {
                        "Отправитель",
                        "e-Wallet 001-359821"});
            table69.AddRow(new string[] {
                        "Количество получателей",
                        "1"});
            table69.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table69.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table69.AddRow(new string[] {
                        "Итого",
                        "$ 10.00"});
#line 801
 testRunner.Given("User see table", ((string)(null)), table69, "Given ");
#line 810
    testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 816
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 817
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table70.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод новому клиенту ePayments",
                        "- $ 10.00"});
#line 818
  testRunner.Given("User see transactions list contains:", ((string)(null)), table70, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table71.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table71.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table71.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table71.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", senderPurseId)});
            table71.AddRow(new string[] {
                        "Получатель",
                        "**Receiver**"});
            table71.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table71.AddRow(new string[] {
                        "Детали",
                        "Transfer to a new client to **Receiver**."});
#line 822
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'InternalPaymentFo" +
                        "rNonClient\' row № 0 direction=\'out\':", userId), ((string)(null)), table71, "Given ");
#line 832
    testRunner.Then("Operator confirms Invoice refund", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient"});
            table72.AddRow(new string[] {
                        "20",
                        "+70002342342"});
#line 833
    testRunner.Then("User gets VerificationCode in table \'ConfirmationCodes\' where:", ((string)(null)), table72, "Then ");
#line 836
    testRunner.Then(string.Format("Operator refunds last invoice for UserId={0}", userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table73.AddRow(new string[] {
                        "73",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 840
   testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table73, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table74.AddRow(new string[] {
                        "Refunded",
                        "",
                        "WaveCrest",
                        "<PurseId>",
                        "WaveCrest",
                        "**Receiver**",
                        "Usd",
                        "EWallet",
                        "<ReceiverIdentityType>",
                        string.Format("{0}", userId)});
#line 843
   testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\" in" +
                        "ternal payment:", userId), ((string)(null)), table74, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table75.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "InternalPaymentForNonClient",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table75.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "InternalPaymentForNonClient",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table75.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table75.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "InternalPaymentCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
#line 848
   testRunner.Then(string.Format("New records appears in \'TPurseTransactions\' for UserId=\"{0}\":", userId), ((string)(null)), table75, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table76.AddRow(new string[] {
                        "Usd",
                        "out",
                        "InternalPayment",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "<PurseId>",
                        "Epid"});
#line 857
   testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table76, "Then ");
#line 861
   testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
