// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ePayments.Tests.Web.Tests.Financial
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("YandexMoney")]
    [NUnit.Framework.CategoryAttribute("YandexMoney")]
    public partial class YandexMoneyFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "YandexMoney.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "YandexMoney", "\t\tSending to Yandex money", ProgrammingLanguage.CSharp, new string[] {
                        "YandexMoney"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Перевод YM физик (без конвертации)")]
        [NUnit.Framework.TestCaseAttribute("23e54424-d8c6-4f24-afc5-fbe626780629", "SMSCode", "123455", "payment password", "nikita_UI_financial_YM@qa.swiftcom.uk", "10.20", "0.20", "10.00", "410000000000", "+70080294751", "23e54424-d8c6-4f24-afc5-fbe626780629", "72621010Abac", "Детали", "001-002542", new string[] {
                "2843636"}, Category="2843636")]
        [NUnit.Framework.TestCaseAttribute("cLCkHIt77RM", "PushCode", "123455", "payment password", "nikita_UI_financial_YM@qa.swiftcom.uk", "10.20", "0.20", "10.00", "410000000000", "+70080294751", "23e54424-d8c6-4f24-afc5-fbe626780629", "72621010Abac", "Детали", "001-002542", new string[] {
                "3393741"}, Category="3393741")]
        public virtual void ПереводYMФизикБезКонвертации(string codeRecipient, string confirmationCode, string paymentCodePhone, string paymentWay, string email, string amountComission, string comission, string amount, string yandexMoneyWallet, string user, string userId, string password, string details, string userPurseId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Перевод YM физик (без конвертации)", exampleTags);
#line 6
  this.ScenarioSetup(scenarioInfo);
#line 13
    testRunner.Then(string.Format("User updates TransactionConfirmationType=\"{0}\" for UserId=\"{1}\" in table \'TUsers\'" +
                        "", confirmationCode, userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.Given("User clicks on \"На кошелек Яндекс.Деньги\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.Then("Section \'Amount including fees\' is: ₽ 0.00 (Комиссия: ₽ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table1.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "₽ 1.00"});
            table1.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "₽ 60 000.00"});
            table1.AddRow(new string[] {
                        "Максимальная дневная сумма:",
                        "₽ 300 000.00"});
            table1.AddRow(new string[] {
                        "Максимальная месячная сумма:",
                        "₽ 600 000.00"});
            table1.AddRow(new string[] {
                        "Количество операций в день:",
                        "99"});
            table1.AddRow(new string[] {
                        "Комиссия:",
                        "2%"});
#line 23
 testRunner.Given("User see limits table", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table2.AddRow(new string[] {
                        "USD"});
            table2.AddRow(new string[] {
                        "EUR"});
            table2.AddRow(new string[] {
                        "RUB"});
#line 32
  testRunner.Given("\'Со счета\' selector is \"RUB\" and contains:", ((string)(null)), table2, "Given ");
#line 39
 testRunner.Then(string.Format("\'Номер кошелька Яндекс.Деньги\' set to \'{0}\'", yandexMoneyWallet), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.Then(string.Format("\'Детали (обязательно)\' details set to \'{0}\'", details), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table3.AddRow(new string[] {
                        "Отправитель",
                        string.Format("RUB, e-Wallet {0}", userPurseId)});
            table3.AddRow(new string[] {
                        "Номер кошелька в Яндекс.Деньги",
                        string.Format("{0}", yandexMoneyWallet)});
            table3.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("₽ {0}", amount)});
            table3.AddRow(new string[] {
                        "Комиссия",
                        string.Format("₽ {0}", comission)});
            table3.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("₽ {0}", amountComission)});
            table3.AddRow(new string[] {
                        "Получаемая сумма",
                        string.Format("₽ {0}", amount)});
            table3.AddRow(new string[] {
                        "Детали",
                        string.Format("{0}", details)});
#line 46
 testRunner.Given("User see table", ((string)(null)), table3, "Given ");
#line 57
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table4.AddRow(new string[] {
                        "MassPayment",
                        string.Format("{0}", codeRecipient),
                        string.Format("{0}", userId),
                        "false"});
#line 63
 testRunner.Then(string.Format("User type {0} sent to:", confirmationCode), ((string)(null)), table4, "Then ");
#line 68
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.Then("User gets message \"Обработка платежа займет несколько минут. Дождитесь результата" +
                    " перевода или продолжите работу в личном кабинете\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
 testRunner.Then("User gets message \"Платеж успешно отправлен\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table5.AddRow(new string[] {
                        "0.00",
                        "0.00",
                        string.Format("-{0}", amountComission)});
#line 80
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table5, "Then ");
#line 84
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table6.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод в Яндекс.Деньги",
                        string.Format("- ₽ {0}", comission)});
            table6.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод в Яндекс.Деньги",
                        string.Format("- ₽ {0}", amount)});
#line 86
 testRunner.Given("User see transactions list contains:", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table7.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table7.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table7.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table7.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table7.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table7.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", comission)});
            table7.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {" +
                                "2}.", yandexMoneyWallet, userPurseId, details)});
#line 91
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoneyFee\' row № 0 direction=\'out\':", userId), ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table8.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table8.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table8.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table8.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table8.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table8.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", amount)});
            table8.AddRow(new string[] {
                        "Детали",
                        string.Format("Outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {2}.", yandexMoneyWallet, userPurseId, details)});
#line 101
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoney\' row № 1 direction=\'out\':", userId), ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table9.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", email),
                        "Отчет по операции №**Invoice**"});
            table9.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6M",
                        "-"});
            table9.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e0",
                        "-"});
#line 112
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Перевод YM физик (конвертация, валидация)")]
        [NUnit.Framework.CategoryAttribute("433734")]
        [NUnit.Framework.TestCaseAttribute("SMSCode", "102.00", "2.00", "100.00", "410000000000", "+70080294751", "23e54424-d8c6-4f24-afc5-fbe626780629", "72621010Abac", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", "002542", "001-002542", "122122", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "144177", "122122", "406604", "Детали", null)]
        public virtual void ПереводYMФизикКонвертацияВалидация(
                    string confirmationCode, 
                    string amountComission, 
                    string comission, 
                    string amount, 
                    string yandexMoneyWallet, 
                    string user, 
                    string userId, 
                    string password, 
                    string ePSUserId, 
                    string shortUserPurseId, 
                    string userPurseId, 
                    string systemPurseId, 
                    string systemPurseUserId, 
                    string ePS_02TemporaryStoragePurse, 
                    string ePS_06Exchanges, 
                    string ePS_01Commissions, 
                    string details, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "433734"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Перевод YM физик (конвертация, валидация)", @__tags);
#line 132
  this.ScenarioSetup(scenarioInfo);
#line 139
 testRunner.Then(string.Format("User updates TransactionConfirmationType=\"{0}\" for UserId=\"{1}\" in table \'TUsers\'" +
                        "", confirmationCode, userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.Given("User clicks on \"На кошелек Яндекс.Деньги\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
 testRunner.Then("Section \'Amount including fees\' is: ₽ 0.00 (Комиссия: ₽ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table10.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "₽ 1.00"});
            table10.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "₽ 60 000.00"});
            table10.AddRow(new string[] {
                        "Максимальная дневная сумма:",
                        "₽ 300 000.00"});
            table10.AddRow(new string[] {
                        "Максимальная месячная сумма:",
                        "₽ 600 000.00"});
            table10.AddRow(new string[] {
                        "Количество операций в день:",
                        "99"});
            table10.AddRow(new string[] {
                        "Комиссия:",
                        "2%"});
#line 149
 testRunner.Given("User see limits table", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table11.AddRow(new string[] {
                        "USD"});
            table11.AddRow(new string[] {
                        "EUR"});
            table11.AddRow(new string[] {
                        "RUB"});
#line 158
  testRunner.Given("\'Со счета\' selector is \"RUB\" and contains:", ((string)(null)), table11, "Given ");
#line 165
 testRunner.Then(string.Format("\'Номер кошелька Яндекс.Деньги\' set to \'{0}\'", yandexMoneyWallet), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
 testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
 testRunner.Then(string.Format("\'Детали (обязательно)\' details set to \'{0}\'", details), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 172
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table12.AddRow(new string[] {
                        "Отправитель",
                        string.Format("RUB, e-Wallet {0}", userPurseId)});
            table12.AddRow(new string[] {
                        "Номер кошелька в Яндекс.Деньги",
                        string.Format("{0}", yandexMoneyWallet)});
            table12.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("₽ {0}", amount)});
            table12.AddRow(new string[] {
                        "Комиссия",
                        string.Format("₽ {0}", comission)});
            table12.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("₽ {0}", amountComission)});
            table12.AddRow(new string[] {
                        "Получаемая сумма",
                        string.Format("₽ {0}", amount)});
            table12.AddRow(new string[] {
                        "Детали",
                        string.Format("{0}", details)});
#line 173
 testRunner.Given("User see table", ((string)(null)), table12, "Given ");
#line 184
 testRunner.Given("User clicks on \"Назад\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 185
 testRunner.Then(string.Format("\'Номер кошелька Яндекс.Деньги\' value is \'{0}\'", yandexMoneyWallet), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
 testRunner.Then(string.Format("\'Отдаваемая сумма\' value is \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 187
 testRunner.Then(string.Format("\'Получаемая сумма\' value is \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 188
 testRunner.Then(string.Format("\'Детали (обязательно)\' details value is \'{0}\'", details), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 190
 testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
 testRunner.Then(string.Format("Section \'Amount including fees\' is: $ {0} (Комиссия: $ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 192
 testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table13.AddRow(new string[] {
                        "Отправитель",
                        string.Format("USD, e-Wallet {0}", userPurseId)});
            table13.AddRow(new string[] {
                        "Номер кошелька в Яндекс.Деньги",
                        string.Format("{0}", yandexMoneyWallet)});
            table13.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("$ {0}", amount)});
            table13.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table13.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amountComission)});
            table13.AddRow(new string[] {
                        "Курс обмена",
                        "$ 1.00 = ₽ **rateWM**"});
            table13.AddRow(new string[] {
                        "Получаемая сумма",
                        "₽ **amount * rate**"});
            table13.AddRow(new string[] {
                        "Детали",
                        string.Format("{0}", details)});
#line 195
 testRunner.Given("User see table", ((string)(null)), table13, "Given ");
#line 208
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 209
 testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table14.AddRow(new string[] {
                        "MassPayment",
                        string.Format("{0}", user),
                        string.Format("{0}", userId),
                        "false"});
#line 212
 testRunner.Then("User type SMS sent to:", ((string)(null)), table14, "Then ");
#line 215
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
 testRunner.Then("User gets message \"Обработка платежа займет несколько минут. Дождитесь результата" +
                    " перевода или продолжите работу в личном кабинете\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 220
 testRunner.Then("User gets message \"Платеж успешно отправлен\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 222
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table15.AddRow(new string[] {
                        "136",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 226
 testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table16.AddRow(new string[] {
                        "Successed",
                        string.Format("{0}", details),
                        "WaveCrest",
                        string.Format("{0}", userPurseId),
                        "YandexMoney",
                        string.Format("{0}", yandexMoneyWallet),
                        "Usd",
                        "EWallet",
                        "Purse",
                        string.Format("{0}", userId)});
#line 230
 testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table17.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "OutgoingTransferToYandexMoney",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("1{0}", shortUserPurseId),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "OutgoingTransferToYandexMoney",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToYandexMoneyFee",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("1{0}", shortUserPurseId),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToYandexMoneyFee",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", ePS_06Exchanges),
                        "0"});
            table17.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Rub",
                        string.Format("{0}", ePS_06Exchanges),
                        "0"});
            table17.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        "**amount * rate**",
                        "OutgoingTransferToYandexMoney",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToYandexMoneyFee",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table17.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToYandexMoneyFee",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_01Commissions),
                        "0"});
#line 235
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table18.AddRow(new string[] {
                        "Rub",
                        "out",
                        "OutgoingTransferToYandexMoney",
                        string.Format("{0}", userId),
                        "**amount * rate**",
                        "**Generated**",
                        string.Format("{0}", userPurseId),
                        "Epid"});
#line 250
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table19.AddRow(new string[] {
                        "**amount * rate**",
                        "Rub",
                        "YandexMoney",
                        "false"});
#line 256
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table20.AddRow(new string[] {
                        string.Format("-{0}", amountComission),
                        "0.00",
                        "0.00"});
#line 262
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table20, "Then ");
#line 266
 testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 267
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 268
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 270
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table21.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод в Яндекс.Деньги",
                        "- $ 2.00"});
            table21.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод в Яндекс.Деньги",
                        "- $ 100.00"});
#line 272
 testRunner.Given("User see transactions list contains:", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table22.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table22.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table22.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table22.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table22.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table22.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table22.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {" +
                                "2}. Amount transferred to Yandex.Money: ₽**amount ** rate**, Rate: $1 = ₽**rate*" +
                                "*.", yandexMoneyWallet, userPurseId, details)});
#line 277
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoneyFee\' row № 0 direction=\'out\':", userId), ((string)(null)), table22, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table23.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table23.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table23.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table23.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table23.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table23.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table23.AddRow(new string[] {
                        "Детали",
                        string.Format("Outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {2}. Amount tran" +
                                "sferred to Yandex.Money: ₽**amount ** rate**, Rate: $1 = ₽**rate**.", yandexMoneyWallet, userPurseId, details)});
#line 287
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoney\' row № 1 direction=\'out\':", userId), ((string)(null)), table23, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table24.AddRow(new string[] {
                        "Sms",
                        "13",
                        string.Format("{0}", user),
                        "-"});
            table24.AddRow(new string[] {
                        "Email",
                        "6",
                        "nikita_UI_financial_YM@qa.swiftcom.uk",
                        "Отчет по операции №**Invoice**"});
            table24.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6M",
                        "-"});
            table24.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e0",
                        "-"});
#line 298
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Массовый перевод Yandex Money - биз")]
        [NUnit.Framework.TestCaseAttribute("sendtoYMbizmass@qa.swiftcom.uk", "102.00", "2.00", "100.00", "410000000000", "sendtoYMbizmass@qa.swiftcom.uk", "81971728-ec4c-418a-b751-54f17c699d1c", "72621010Abac", "Детали", new string[] {
                "3336939"}, Category="3336939")]
        public virtual void МассовыйПереводYandexMoney_Биз(string email, string amountComission, string comission, string amount, string yandexMoneyWallet, string user, string userId, string password, string details, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Массовый перевод Yandex Money - биз", exampleTags);
#line 313
  this.ScenarioSetup(scenarioInfo);
#line 327
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 328
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 329
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 331
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 332
 testRunner.Given("User clicks on \"В Яндекс.Деньги\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
 testRunner.Then("Section \'Amount including fees\' is: ₽ 0.00 (Комиссия: ₽ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "Min",
                        "Max",
                        "Fee"});
            table25.AddRow(new string[] {
                        "RUB",
                        "₽ 100.00",
                        "₽ 60 000.00",
                        "2%"});
#line 336
     testRunner.Given("User see limits table at YandexMoney mass payment", ((string)(null)), table25, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table26.AddRow(new string[] {
                        "RUB"});
            table26.AddRow(new string[] {
                        "USD"});
            table26.AddRow(new string[] {
                        "EUR"});
#line 339
 testRunner.Given("\'Отдаваемая сумма\' selector is \"RUB\" and contains:", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table27.AddRow(new string[] {
                        "RUB"});
#line 344
 testRunner.Given("\'Получаемая сумма\' selector is \"RUB\" and contains:", ((string)(null)), table27, "Given ");
#line 349
  testRunner.Given("User clicks on \"Загрузка CSV-файла с параметрами платежей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 350
 testRunner.Then("File \"Sample_file_for_mass_payment_yandexmoney_negative.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 352
 testRunner.Then("Alert Message \"Строка 1: Кошелек не найден\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 353
   testRunner.Then("File \"Sample_file_for_mass_payment_yandexmoney.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table28.AddRow(new string[] {
                        "1",
                        "410011234567890",
                        "₽ 100.00",
                        "₽ 2.00",
                        "₽ 100.00",
                        "₽ 102.00",
                        "УДАЛИТЬ"});
#line 354
 testRunner.Given("User see YandexMoney receivers table", ((string)(null)), table28, "Given ");
#line 359
 testRunner.Then(string.Format("\'Номер кошелька Яндекс.Деньги\' set to \'{0}\'", yandexMoneyWallet), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 360
 testRunner.Then("\'Отдаваемая сумма\' selector set to \'USD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 361
 testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 362
 testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 363
 testRunner.Then(string.Format("\'Детали (обязательно)\' details set to \'{0}\'", details), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 364
 testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 366
 testRunner.Given("User clicks on \"Добавить платеж\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table29.AddRow(new string[] {
                        "1",
                        "410011234567890",
                        "₽ 100.00",
                        "₽ 2.00",
                        "₽ 100.00",
                        "₽ 102.00",
                        "УДАЛИТЬ"});
            table29.AddRow(new string[] {
                        "2",
                        "410000000000",
                        "$ 100.00",
                        "$ 2.00",
                        "₽ **amount * rate**",
                        "$ 102.00",
                        "УДАЛИТЬ"});
#line 367
 testRunner.Given("User see YandexMoney receivers table", ((string)(null)), table29, "Given ");
#line 373
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 374
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table30.AddRow(new string[] {
                        "MassPayment",
                        "+70017652430",
                        string.Format("{0}", userId),
                        "false"});
#line 377
 testRunner.Then("User type SMS sent to:", ((string)(null)), table30, "Then ");
#line 380
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 382
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 384
 testRunner.Then("User gets message \"Обработка платежей завершена\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 385
 testRunner.Then("User gets message \"Выполнено 2 из 2\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table31.AddRow(new string[] {
                        "1",
                        "410000000000",
                        "$ 100.00",
                        "$ 2.00",
                        "₽ **amount * rate**",
                        "$ 102.00",
                        "Успешно"});
            table31.AddRow(new string[] {
                        "2",
                        "410011234567890",
                        "₽ 100.00",
                        "₽ 2.00",
                        "₽ 100.00",
                        "₽ 102.00",
                        "Отклонено"});
#line 387
 testRunner.Given("User see quittance YandexMoney receivers table", ((string)(null)), table31, "Given ");
#line 392
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 395
 testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 396
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 397
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table32.AddRow(new string[] {
                        "-102.00",
                        "0.00",
                        "0.00"});
#line 398
  testRunner.Then("eWallet updated sections are:", ((string)(null)), table32, "Then ");
#line 401
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table33.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод в Яндекс.Деньги",
                        "- $ 2.00"});
            table33.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод в Яндекс.Деньги",
                        "- $ 100.00"});
#line 404
 testRunner.Given("User see transactions list contains:", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table34.AddRow(new string[] {
                        "Sms",
                        "13",
                        "+70017652430",
                        "-"});
            table34.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", email),
                        "Отчет по операции"});
            table34.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "ecAFO1HKm8o:APA91bEWPkpSj7H4ZguaxcPhLKZjIPRqDHlsbA6BR394uQ7HAtwGwwpg2UBiUdzY3mzMZ" +
                            "jMHDIAxHqQqruZ95LZGY3rpjssXXkR6hsXVOM_S0gq00NG5bdT22MF5LOMWQ9kM66s2Edw-",
                        "-"});
            table34.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "44a554d54e72c4df41f40a0cdbe362a4bf2a86f9f52ceafd36b7b9573bee2fed",
                        "-"});
#line 410
    testRunner.Then(string.Format("User selects records in table \'Notification\' for UserId=\"{0}\"", userId), ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Пополнение через Yandex.Деньги - без конвертации")]
        [NUnit.Framework.TestCaseAttribute("receiveFromYandex@qa.swiftcom.uk", "10.20", "0.20", "10.00", "410000000000", "+70080294751", "23e54424-d8c6-4f24-afc5-fbe626780629", "72621010Abac", "Детали", "001-002542", new string[] {
                "552633"}, Category="552633")]
        public virtual void ПополнениеЧерезYandex_Деньги_БезКонвертации(string email, string amountComission, string comission, string amount, string yandexMoneyWallet, string user, string userId, string password, string details, string userPurseId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Пополнение через Yandex.Деньги - без конвертации", exampleTags);
#line 425
this.ScenarioSetup(scenarioInfo);
#line 432
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 434
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 436
 testRunner.Given("User clicks on Получить menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 437
 testRunner.Given("User clicks on \"С кошелька Яндекс.Деньги\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 439
 testRunner.Then("Section \'Amount including fees\' is: ₽ 0.00 (Комиссия: ₽ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table35.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "₽ 1.00"});
            table35.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "₽ 60 000.00"});
            table35.AddRow(new string[] {
                        "Максимальная дневная сумма:",
                        "$ 1 000.00"});
            table35.AddRow(new string[] {
                        "Максимальная месячная сумма:",
                        "$ 5 000.00"});
            table35.AddRow(new string[] {
                        "Количество операций в день:",
                        "5"});
            table35.AddRow(new string[] {
                        "Комиссия:",
                        "2%"});
#line 440
 testRunner.Given("User see limits table", ((string)(null)), table35, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table36.AddRow(new string[] {
                        "USD"});
            table36.AddRow(new string[] {
                        "EUR"});
            table36.AddRow(new string[] {
                        "RUB"});
#line 449
  testRunner.Given("\'На счет\' selector is \"RUB\" and contains:", ((string)(null)), table36, "Given ");
#line 456
 testRunner.Then(string.Format("\'Получаемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 457
 testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 460
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table37.AddRow(new string[] {
                        "На счет",
                        string.Format("RUB, e-Wallet {0}", userPurseId)});
            table37.AddRow(new string[] {
                        "Получаемая сумма",
                        string.Format("₽ {0}", amount)});
            table37.AddRow(new string[] {
                        "Отдаваемая сумма",
                        string.Format("₽ {0}", amountComission)});
            table37.AddRow(new string[] {
                        "Комиссия",
                        string.Format("₽ {0}", comission)});
#line 461
 testRunner.Given("User see table", ((string)(null)), table37, "Given ");
#line 469
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 470
 testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 473
    testRunner.Then("User proceed payment in YandexMoney with user sazykin.y@yandex.ru password 4!tJ10" +
                    "VcmD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 474
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 475
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 476
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 477
 testRunner.Then("User gets message \"Обработка платежа займет несколько минут. Дождитесь результата" +
                    " перевода или продолжите работу в личном кабинете\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 480
 testRunner.Then("User gets message \"Платеж успешно отправлен\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 481
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 483
 testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 484
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 485
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table38.AddRow(new string[] {
                        "0.00",
                        "0.00",
                        string.Format("-{0}", amountComission)});
#line 486
  testRunner.Then("eWallet updated sections are:", ((string)(null)), table38, "Then ");
#line 490
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table39.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод в Яндекс.Деньги",
                        string.Format("- ₽ {0}", comission)});
            table39.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод в Яндекс.Деньги",
                        string.Format("- ₽ {0}", amount)});
#line 492
 testRunner.Given("User see transactions list contains:", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table40.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table40.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table40.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table40.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table40.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table40.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", comission)});
            table40.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {" +
                                "2}.", yandexMoneyWallet, userPurseId, details)});
#line 497
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoneyFee\' row № 0:", userId), ((string)(null)), table40, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table41.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table41.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table41.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table41.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table41.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", yandexMoneyWallet)});
            table41.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", amount)});
            table41.AddRow(new string[] {
                        "Детали",
                        string.Format("Outgoing payment to Yandex.Money {0} from e-Wallet {1}. Details: {2}.", yandexMoneyWallet, userPurseId, details)});
#line 507
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oYandexMoney\' row № 1:", userId), ((string)(null)), table41, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table42.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", email),
                        "Отчет по операции №**Invoice**"});
            table42.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6M",
                        "-"});
            table42.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e0",
                        "-"});
#line 518
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table42, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
