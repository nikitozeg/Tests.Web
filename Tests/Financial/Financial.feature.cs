// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ePayments.Tests.Web.Tests.Financial
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Financial")]
    [NUnit.Framework.CategoryAttribute("Financial")]
    public partial class FinancialFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Financial.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Financial", null, ProgrammingLanguage.CSharp, new string[] {
                        "Financial"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Обмен валют EPA-6199")]
        [NUnit.Framework.CategoryAttribute("135416")]
        [NUnit.Framework.TestCaseAttribute("+70092039926", "f751650f-2754-4bc1-bf23-ce78f347764e", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1053655", "001-053655", "122122", null)]
        public virtual void ОбменВалютEPA_6199(string user, string userId, string password, string systemPurseUserId, string userPurseId, string purseId, string systemPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "135416"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Обмен валют EPA-6199", @__tags);
#line 5
  this.ScenarioSetup(scenarioInfo);
#line 10
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.Given("User clicks on \"Между своими счетами\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
 testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.Then("\'На счет\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.Then("Section \'Received amount\' is: € 0.00 (Курс обмена: $ 1.00 = € **rate**)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.Then("\'Отдаваемая сумма\' set to \'9.99\' and unfocus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table1.AddRow(new string[] {
                        "Минимальная отдаваемая сумма:",
                        "$ 10.00"});
            table1.AddRow(new string[] {
                        "Максимальная отдаваемая сумма:",
                        "нет"});
#line 23
 testRunner.Given("User see limits table", ((string)(null)), table1, "Given ");
#line 28
 testRunner.Then("Validating message \'Отдаваемая сумма меньше  $ 10.00\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.Then("\'Отдаваемая сумма\' set to \'1000001\' and unfocus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.Then("Validating message \'Отдаваемая сумма превышает баланс\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.Then("\'Со счета\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.Then("Section \'Amount including fees\' is: € 0.00 (Комиссия: € 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table2.AddRow(new string[] {
                        "Выберите счет"});
            table2.AddRow(new string[] {
                        "USD"});
            table2.AddRow(new string[] {
                        "RUB"});
            table2.AddRow(new string[] {
                        "5283 **** 3133,  EUR"});
#line 33
  testRunner.Given("\'На счет\' selector is \"Выберите счет\" and contains:", ((string)(null)), table2, "Given ");
#line 42
 testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.Then("\'На счет\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.Then("\'Отдаваемая сумма\' set to \'10.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table3.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table3.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table3.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table3.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "$ 10.00"});
            table3.AddRow(new string[] {
                        "Получаемая сумма",
                        "€ **amount * rate**"});
#line 47
 testRunner.Given("User see table", ((string)(null)), table3, "Given ");
#line 55
 testRunner.Given("User clicks on \"Назад\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.Then("\'Отдаваемая сумма\' set to \'100.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.Then("Section \'Received amount\' is: € **amount * rate** (Курс обмена: $ 1.00 = € **rate" +
                    "**)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table4.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table4.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table4.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table4.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "$ 100.00"});
            table4.AddRow(new string[] {
                        "Получаемая сумма",
                        "€ **amount * rate**"});
#line 60
 testRunner.Given("User see table", ((string)(null)), table4, "Given ");
#line 67
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.Then("Success message \"Обмен валют успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table5.AddRow(new string[] {
                        "Операция",
                        "Обмен валюты"});
            table5.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table5.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table5.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table5.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table5.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table5.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "$ 100.00"});
            table5.AddRow(new string[] {
                        "Получаемая сумма",
                        "€ **amount * rate**"});
#line 72
 testRunner.Given("User see quittance table", ((string)(null)), table5, "Given ");
#line 82
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table6.AddRow(new string[] {
                        "100.00",
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table6.AddRow(new string[] {
                        "100.00",
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table6.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table6.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", userId),
                        "Eur",
                        string.Format("{0}", userPurseId),
                        "0"});
#line 87
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table7.AddRow(new string[] {
                        "Usd",
                        "out",
                        "CurrencyExchange",
                        string.Format("{0}", userId),
                        "100.00",
                        "**Generated**",
                        string.Format("{0}", purseId),
                        "Epid"});
#line 95
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table7, "Then ");
#line 101
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table8.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "€ **amount * rate**"});
            table8.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "- $ 100.00"});
#line 104
 testRunner.Given("User see transactions list contains:", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table9.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table9.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table9.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table9.AddRow(new string[] {
                        "Сумма",
                        "€ **amount * rate**"});
            table9.AddRow(new string[] {
                        "Детали",
                        "Currency exchange from USD to EUR. Rate = **rate**"});
#line 109
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CurrencyExchangeU" +
                        "sdAndEur\' row № 0 direction=\'in\' without invoice:", userId), ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table10.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table10.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table10.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table10.AddRow(new string[] {
                        "Сумма",
                        "$ 100.00"});
            table10.AddRow(new string[] {
                        "Детали",
                        "Currency exchange from USD to EUR. Rate = **rate**"});
#line 117
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CurrencyExchangeU" +
                        "sdAndEur\' row № 1 direction=\'out\' without invoice:", userId), ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table11.AddRow(new string[] {
                        "Email",
                        "6",
                        "nikita_UI_financial@qa.swiftcom.uk",
                        "Отчет по операции № **TPurseTransactionId** for currency exchange"});
            table11.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table11.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 126
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TPurseTra" +
                        "nsactionId** for currency exchange\" replacing:", userId), ((string)(null)), table11, "Then ");
#line 134
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
 testRunner.Given("User clicks on \"Между своими счетами\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
 testRunner.Then("\'Со счета\' selector set to \'RUB\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
 testRunner.Then("\'На счет\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
 testRunner.Then("Section \'Received amount\' is: € 0.00 (Курс обмена: ₽ 1.00 = € **rate**)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
 testRunner.Then("\'Отдаваемая сумма\' set to \'100.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table12.AddRow(new string[] {
                        "Со счета",
                        string.Format("RUB, e-Wallet {0}", purseId)});
            table12.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table12.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table12.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "₽ 100.00"});
            table12.AddRow(new string[] {
                        "Получаемая сумма",
                        "€ **amount * rate**"});
#line 145
 testRunner.Given("User see table", ((string)(null)), table12, "Given ");
#line 152
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.Then("Success message \"Обмен валют успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table13.AddRow(new string[] {
                        "Операция",
                        "Обмен валюты"});
            table13.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table13.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table13.AddRow(new string[] {
                        "Со счета",
                        string.Format("RUB, e-Wallet {0}", purseId)});
            table13.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table13.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table13.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "₽ 100.00"});
            table13.AddRow(new string[] {
                        "Получаемая сумма",
                        "€ **amount * rate**"});
#line 155
 testRunner.Given("User see quittance table", ((string)(null)), table13, "Given ");
#line 165
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table14.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "€ **amount * rate**"});
            table14.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "- ₽ 100.00"});
#line 169
 testRunner.Given("User see transactions list contains:", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table15.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table15.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table15.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table15.AddRow(new string[] {
                        "Сумма",
                        "€ **amount * rate**"});
            table15.AddRow(new string[] {
                        "Детали",
                        "Currency exchange from RUB to EUR. Rate = **rate**"});
#line 174
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CurrencyExchangeU" +
                        "sdAndEur\' row № 0 direction=\'in\' without invoice:", userId), ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table16.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table16.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table16.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table16.AddRow(new string[] {
                        "Сумма",
                        "₽ 100.00"});
            table16.AddRow(new string[] {
                        "Детали",
                        "Currency exchange from RUB to EUR. Rate = **rate**"});
#line 182
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CurrencyExchangeU" +
                        "sdAndEur\' row № 1 direction=\'out\' without invoice:", userId), ((string)(null)), table16, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Пополнение карты GPS(Load)")]
        [NUnit.Framework.CategoryAttribute("135417")]
        [NUnit.Framework.TestCaseAttribute("sendwireWithSmsConfirm@qa.swiftcom.uk", "72f549ea-7f00-4ff8-aa88-959c0f1cc3d2", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "10.00", "1881126", "1100", null)]
        public virtual void ПополнениеКартыGPSLoad(string user, string userId, string password, string systemPurseUserId, string amount, string userPurseId, string systemPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "135417"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Пополнение карты GPS(Load)", @__tags);
#line 197
  this.ScenarioSetup(scenarioInfo);
#line 199
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 203
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 204
 testRunner.Given("User clicks on \"Пополнить\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 205
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table17.AddRow(new string[] {
                        "USD"});
            table17.AddRow(new string[] {
                        "EUR"});
            table17.AddRow(new string[] {
                        "RUB"});
            table17.AddRow(new string[] {
                        "5283 **** 3024,  USD"});
            table17.AddRow(new string[] {
                        "5283 **** 8626,  EUR"});
            table17.AddRow(new string[] {
                        "Выберите счет"});
#line 207
 testRunner.Given("\'Со счета\' selector is \"USD\" and contains:", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table18.AddRow(new string[] {
                        "Выберите счет"});
            table18.AddRow(new string[] {
                        "EUR"});
            table18.AddRow(new string[] {
                        "RUB"});
            table18.AddRow(new string[] {
                        "5283 **** 3024,  USD"});
#line 216
    testRunner.Given("\'На счет\' selector is \"5283 **** 3024,  USD\" and contains:", ((string)(null)), table18, "Given ");
#line 223
 testRunner.Then("\'Со счета\' selector set to \'RUB\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table19.AddRow(new string[] {
                        "Выберите счет"});
            table19.AddRow(new string[] {
                        "USD"});
            table19.AddRow(new string[] {
                        "EUR"});
#line 224
    testRunner.Given("\'На счет\' selector is \"Выберите счет\" and contains:", ((string)(null)), table19, "Given ");
#line 230
 testRunner.Then("\'Со счета\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table20.AddRow(new string[] {
                        "Выберите счет"});
            table20.AddRow(new string[] {
                        "USD"});
            table20.AddRow(new string[] {
                        "RUB"});
            table20.AddRow(new string[] {
                        "5283 **** 8626,  EUR"});
#line 231
    testRunner.Given("\'На счет\' selector is \"Выберите счет\" and contains:", ((string)(null)), table20, "Given ");
#line 238
 testRunner.Then("\'На счет\' selector set to \'5283 **** 8626,  EUR\' in EPA cards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table21.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "€ 10.00"});
            table21.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "€ 7 778.00"});
            table21.AddRow(new string[] {
                        "Комиссия:",
                        "0%"});
#line 239
    testRunner.Given("User see limits table", ((string)(null)), table21, "Given ");
#line 245
 testRunner.Then("\'Сумма\' set to \'9.99\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
 testRunner.Then("\'Сумма с комиссией\' value is \'9.99\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 247
    testRunner.Then("Validating message \'Сумма перевода меньше  € 10.00\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 248
 testRunner.Then("\'Сумма\' set to \'10000000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 249
 testRunner.Then("\'Сумма с комиссией\' value is \'10000000.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
    testRunner.Then("Validating message \'Сумма с комиссией превышает баланс\' appears on MultiForm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 252
 testRunner.Then("\'Сумма с комиссией\' set to \'50\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 253
    testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 254
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 255
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table22.AddRow(new string[] {
                        "Со счета",
                        "EUR, e-Wallet 001-881126"});
            table22.AddRow(new string[] {
                        "На счет",
                        "EUR, ePayments Card 5283****8626"});
            table22.AddRow(new string[] {
                        "Сумма",
                        "€ 50.00"});
            table22.AddRow(new string[] {
                        "Комиссия",
                        "€ 0.00"});
            table22.AddRow(new string[] {
                        "Сумма с комиссией",
                        "€ 50.00"});
#line 257
 testRunner.Given("User see table", ((string)(null)), table22, "Given ");
#line 264
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 265
 testRunner.Given("User clicks on \"Назад\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 266
 testRunner.Then("\'Сумма\' value is \'50.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 267
 testRunner.Then("\'Сумма с комиссией\' value is \'50.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 269
 testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 270
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table23.AddRow(new string[] {
                        "Со счета",
                        "EUR, e-Wallet 001-881126"});
            table23.AddRow(new string[] {
                        "На счет",
                        "EUR, ePayments Card 5283****8626"});
            table23.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table23.AddRow(new string[] {
                        "Комиссия",
                        "€ 0.00"});
            table23.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amount)});
#line 271
 testRunner.Given("User see table", ((string)(null)), table23, "Given ");
#line 278
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 279
 testRunner.Then("Memorize EPACards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 281
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 282
 testRunner.Then("Success message \"Ваша карта успешно пополнена×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table24.AddRow(new string[] {
                        "Операция",
                        "Перевод на карту ePayments"});
            table24.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table24.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table24.AddRow(new string[] {
                        "Со счета",
                        "EUR, e-Wallet 001-881126"});
            table24.AddRow(new string[] {
                        "На счет",
                        "EUR, ePayments Card 5283****8626"});
            table24.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table24.AddRow(new string[] {
                        "Комиссия",
                        "€ 0.00"});
            table24.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amount)});
#line 283
 testRunner.Given("User see quittance table", ((string)(null)), table24, "Given ");
#line 293
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table25.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", userId),
                        "Eur",
                        string.Format("{0}", userPurseId),
                        "0"});
            table25.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table25.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 298
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table25, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table26.AddRow(new string[] {
                        "Eur",
                        "in",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "b217adcb-3111-46df-9513-d6d2fa739ee3",
                        "Ecard"});
            table26.AddRow(new string[] {
                        "Eur",
                        "out",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "001-881126",
                        "Epid"});
#line 305
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table27.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Eur",
                        "WaveCrest",
                        "false"});
#line 310
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table28.AddRow(new string[] {
                        "0.00",
                        string.Format("-{0}", amount),
                        "0.00"});
#line 315
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table28, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR"});
            table29.AddRow(new string[] {
                        "0.00",
                        string.Format("+{0}", amount)});
#line 318
  testRunner.Then("EPA cards updated sections are:", ((string)(null)), table29, "Then ");
#line 321
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 322
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table30.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("- € {0}", amount)});
            table30.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("€ {0}", amount)});
#line 323
 testRunner.Given("User see transactions list contains:", ((string)(null)), table30, "Given ");
#line 328
 testRunner.Then("User gets record in \'EhiLog\' where Token=\"422090221\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table31.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**TXn_ID**"});
            table31.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table31.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 329
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TXn_ID**\"" +
                        " replacing:", userId), ((string)(null)), table31, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Вывод средств с карты GPS(Unload) - USD")]
        [NUnit.Framework.CategoryAttribute("135418")]
        [NUnit.Framework.TestCaseAttribute("unloadUSD@qa.swiftcom.uk", "6638e7ee-1a3d-46d7-bf2b-571bb2bf9647", "72621010Abac", "20.00", "1.00", "21.00", "1164710", "001-164710", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", "406604", null)]
        public virtual void ВыводСредствСКартыGPSUnload_USD(string user, string userId, string password, string amount, string comission, string amountWithComission, string userPurseId, string purseId, string ePSUserId, string ePS_01Commissions, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "135418"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Вывод средств с карты GPS(Unload) - USD", @__tags);
#line 343
  this.ScenarioSetup(scenarioInfo);
#line 345
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 346
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 350
 testRunner.Given("User clicks on \"Снять\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 351
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table32.AddRow(new string[] {
                        "USD"});
            table32.AddRow(new string[] {
                        "EUR"});
            table32.AddRow(new string[] {
                        "RUB"});
            table32.AddRow(new string[] {
                        "5283 **** 2959,  USD"});
            table32.AddRow(new string[] {
                        "5283 **** 3094,  EUR"});
            table32.AddRow(new string[] {
                        "Выберите счет"});
#line 353
 testRunner.Given("\'Со счета\' selector is \"5283 **** 2959,  USD\" and contains:", ((string)(null)), table32, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table33.AddRow(new string[] {
                        "Выберите счет"});
            table33.AddRow(new string[] {
                        "USD"});
#line 362
    testRunner.Given("\'На счет\' selector is \"USD\" and contains:", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table34.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "$ 10.00"});
            table34.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "$ 10 000.00"});
            table34.AddRow(new string[] {
                        "Комиссия:",
                        "$ 1"});
#line 367
    testRunner.Given("User see limits table", ((string)(null)), table34, "Given ");
#line 372
    testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 373
    testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 374
   testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table35.AddRow(new string[] {
                        "Со счета",
                        "USD, ePayments Card 5283****2959"});
            table35.AddRow(new string[] {
                        "На счет",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table35.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table35.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table35.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amountWithComission)});
#line 377
 testRunner.Given("User see table", ((string)(null)), table35, "Given ");
#line 384
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 385
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 387
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 388
 testRunner.Then("Memorize EPACards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 390
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 391
 testRunner.Then("Success message \"Ваш кошелек успешно пополнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table36.AddRow(new string[] {
                        "Операция",
                        "Перевод с карты ePayments"});
            table36.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table36.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table36.AddRow(new string[] {
                        "Со счета",
                        "USD, ePayments Card 5283****2959"});
            table36.AddRow(new string[] {
                        "На счет",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table36.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table36.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table36.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amountWithComission)});
#line 392
 testRunner.Given("User see quittance table", ((string)(null)), table36, "Given ");
#line 402
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table37.AddRow(new string[] {
                        string.Format("{0}", amountWithComission),
                        "CardUnload",
                        "in",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table37.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardUnloadCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table37.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardUnloadCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_01Commissions),
                        "0"});
#line 407
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table37, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table38.AddRow(new string[] {
                        "Usd",
                        "out",
                        "CardUnload",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "5b6f6945-0252-482e-b4e1-3baa5da4b291",
                        "Ecard"});
            table38.AddRow(new string[] {
                        "Usd",
                        "in",
                        "CardUnload",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        string.Format("{0}", purseId),
                        "Epid"});
#line 414
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table38, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table39.AddRow(new string[] {
                        string.Format("{0}", amountWithComission),
                        "Usd",
                        "WaveCrest",
                        "true"});
#line 420
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table39, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table40.AddRow(new string[] {
                        "Email",
                        "5",
                        string.Format("{0}", user),
                        "Отчет по операции №**TPurseTransactionId**"});
            table40.AddRow(new string[] {
                        "PushAndroid",
                        "5",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table40.AddRow(new string[] {
                        "PushIos",
                        "5",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 426
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TPurseTra" +
                        "nsactionId**\" replacing:", userId), ((string)(null)), table40, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table41.AddRow(new string[] {
                        string.Format("+{0}", amount),
                        "0.00",
                        "0.00"});
#line 432
     testRunner.Then("eWallet updated sections are:", ((string)(null)), table41, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR"});
            table42.AddRow(new string[] {
                        string.Format("-{0}", amountWithComission),
                        "0.00"});
#line 435
  testRunner.Then("EPA cards updated sections are:", ((string)(null)), table42, "Then ");
#line 438
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 439
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 440
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table43.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за пополнение кошелька с карты ePayments",
                        string.Format("- $ {0}", comission)});
            table43.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод с карты ePayments",
                        string.Format("- $ {0}", amountWithComission)});
            table43.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод с карты ePayments",
                        string.Format("$ {0}", amountWithComission)});
#line 441
 testRunner.Given("User see transactions list contains:", ((string)(null)), table43, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Вывод средств с карты GPS(Unload) - EUR")]
        [NUnit.Framework.CategoryAttribute("2704361")]
        [NUnit.Framework.TestCaseAttribute("+70092039926", "f751650f-2754-4bc1-bf23-ce78f347764e", "72621010Abac", "10.00", "1.00", "11.00", "1053655", "001-053655", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", null)]
        public virtual void ВыводСредствСКартыGPSUnload_EUR(string user, string userId, string password, string amount, string comission, string amountWithComission, string userPurseId, string purseId, string ePSUserId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "2704361"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Вывод средств с карты GPS(Unload) - EUR", @__tags);
#line 454
  this.ScenarioSetup(scenarioInfo);
#line 456
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 457
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 458
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 460
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 461
 testRunner.Given("User clicks on \"Снять\" \"EUR\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 462
 testRunner.Then("Section \'Amount including fees\' is: € 0.00 (Комиссия: € 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table44.AddRow(new string[] {
                        "USD"});
            table44.AddRow(new string[] {
                        "EUR"});
            table44.AddRow(new string[] {
                        "RUB"});
            table44.AddRow(new string[] {
                        "5283 **** 9772,  USD"});
            table44.AddRow(new string[] {
                        "5283 **** 3133,  EUR"});
            table44.AddRow(new string[] {
                        "Выберите счет"});
#line 464
 testRunner.Given("\'Со счета\' selector is \"5283 **** 3133,  EUR\" and contains:", ((string)(null)), table44, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table45.AddRow(new string[] {
                        "Выберите счет"});
            table45.AddRow(new string[] {
                        "EUR"});
#line 473
    testRunner.Given("\'На счет\' selector is \"EUR\" and contains:", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table46.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "€ 10.00"});
            table46.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "€ 7 778.00"});
            table46.AddRow(new string[] {
                        "Комиссия:",
                        "€ 1"});
#line 478
    testRunner.Given("User see limits table", ((string)(null)), table46, "Given ");
#line 483
    testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 484
    testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 485
   testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table47.AddRow(new string[] {
                        "Со счета",
                        "EUR, ePayments Card 5283****3133"});
            table47.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table47.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table47.AddRow(new string[] {
                        "Комиссия",
                        string.Format("€ {0}", comission)});
            table47.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amountWithComission)});
#line 488
 testRunner.Given("User see table", ((string)(null)), table47, "Given ");
#line 495
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 496
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 497
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 498
 testRunner.Then("Success message \"Ваш кошелек успешно пополнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table48.AddRow(new string[] {
                        "Операция",
                        "Перевод с карты ePayments"});
            table48.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table48.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table48.AddRow(new string[] {
                        "Со счета",
                        "EUR, ePayments Card 5283****3133"});
            table48.AddRow(new string[] {
                        "На счет",
                        string.Format("EUR, e-Wallet {0}", purseId)});
            table48.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table48.AddRow(new string[] {
                        "Комиссия",
                        string.Format("€ {0}", comission)});
            table48.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amountWithComission)});
#line 499
 testRunner.Given("User see quittance table", ((string)(null)), table48, "Given ");
#line 509
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table49.AddRow(new string[] {
                        string.Format("{0}", amountWithComission),
                        "CardUnload",
                        "in",
                        string.Format("{0}", userId),
                        "Eur",
                        string.Format("{0}", userPurseId),
                        "0"});
            table49.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardUnloadCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Eur",
                        "406604",
                        "0"});
            table49.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardUnloadCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Eur",
                        string.Format("{0}", userPurseId),
                        "0"});
#line 514
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table49, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table50.AddRow(new string[] {
                        "Eur",
                        "out",
                        "CardUnload",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "0394c5d4-e6e7-4204-8da5-93e239e5625e",
                        "Ecard"});
            table50.AddRow(new string[] {
                        "Eur",
                        "in",
                        "CardUnload",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        string.Format("{0}", purseId),
                        "Epid"});
#line 521
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table50, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table51.AddRow(new string[] {
                        string.Format("{0}", amountWithComission),
                        "Eur",
                        "WaveCrest",
                        "true"});
#line 527
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table51, "Then ");
#line 532
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 533
 testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 534
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table52.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за пополнение кошелька с карты ePayments",
                        string.Format("- € {0}", comission)});
            table52.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод с карты ePayments",
                        string.Format("- € {0}", amountWithComission)});
            table52.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод с карты ePayments",
                        string.Format("€ {0}", amountWithComission)});
#line 535
 testRunner.Given("User see transactions list contains:", ((string)(null)), table52, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table53.AddRow(new string[] {
                        "Email",
                        "5",
                        "nikita_UI_financial@qa.swiftcom.uk",
                        "Отчет по операции №**TPurseTransactionId**"});
            table53.AddRow(new string[] {
                        "PushAndroid",
                        "5",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table53.AddRow(new string[] {
                        "PushIos",
                        "5",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 541
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TPurseTra" +
                        "nsactionId**\" replacing:", userId), ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Антифрод")]
        [NUnit.Framework.CategoryAttribute("433739")]
        [NUnit.Framework.TestCaseAttribute("ui_antifrod_test2@qa.swiftcom.uk", "7947ada5-d6b5-4cdb-86e0-5853fc013425", "72621010Abac", "10.00", null)]
        public virtual void Антифрод(string user, string userId, string password, string amount, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "433739"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Антифрод", @__tags);
#line 557
  this.ScenarioSetup(scenarioInfo);
#line 559
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 560
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 561
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 563
 testRunner.Given("User clicks on Получить menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 564
 testRunner.Given("User clicks on \"С банковской карты\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 565
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table54.AddRow(new string[] {
                        "USD"});
            table54.AddRow(new string[] {
                        "EUR"});
            table54.AddRow(new string[] {
                        "RUB"});
#line 567
 testRunner.Given("\'На счет\' selector is \"USD\" and contains:", ((string)(null)), table54, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "CardNumber",
                        "CardExpireAt",
                        "CVC",
                        "CardHolder"});
            table55.AddRow(new string[] {
                        "5413330000000019",
                        "01/20",
                        "589",
                        "Firstname LastName"});
#line 573
 testRunner.Then("User fills CardDetails:", ((string)(null)), table55, "Then ");
#line 577
 testRunner.Then("\'Сумма\' set to \'10\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 578
 testRunner.Then("Section \'Amount including fees\' is: $ 10.26 (Комиссия: $ 0.26)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 580
    testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 582
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 583
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table56.AddRow(new string[] {
                        "На счет",
                        "USD, e-Wallet 001-070590"});
            table56.AddRow(new string[] {
                        "Банковская карта",
                        "Mastercard, x0019"});
            table56.AddRow(new string[] {
                        "Сумма",
                        "$ 10.00"});
            table56.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.26"});
            table56.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 10.26"});
#line 585
 testRunner.Given("User see table", ((string)(null)), table56, "Given ");
#line 592
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 593
 testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 595
 testRunner.Then("User gets message \"Операция отклонена\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 596
 testRunner.Then("User gets message \"Требуется подтвердить владение картой 5413 33** **** 0019. Пож" +
                    "алуйста, загрузите фотографию карты в меню \"Настройки\" \" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 597
 testRunner.Then("User gets message \"Проверка карты занимает 1-2 дня. Вы получите уведомление о вер" +
                    "ификации карты по email.\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 599
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClassName",
                        "HasRisk",
                        "AddedWeight",
                        "Error"});
            table57.AddRow(new string[] {
                        "CountryRiskChecker",
                        "true",
                        "40",
                        ""});
            table57.AddRow(new string[] {
                        "LevensteinChecker",
                        "true",
                        "40",
                        ""});
            table57.AddRow(new string[] {
                        "CardWasUsed",
                        "true",
                        "40",
                        ""});
            table57.AddRow(new string[] {
                        "IpAndCardCountry",
                        "true",
                        "10",
                        ""});
            table57.AddRow(new string[] {
                        "UserAndCardCountry",
                        "true",
                        "30",
                        ""});
            table57.AddRow(new string[] {
                        "LastSuccessfulOperationDate",
                        "true",
                        "10",
                        ""});
#line 601
    testRunner.Then(string.Format("User selects records in \'FraudOperationCheckLogs\' by last FraudOperationLog where" +
                        " UserId=\"{0}\":", userId), ((string)(null)), table57, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table58.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**Invoice**"});
#line 610
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table58, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Списание за обслуживание с кошелька")]
        [NUnit.Framework.TestCaseAttribute("5283****9658", "false", "spisanie_za_obsl@qa.swiftcom.uk", "20b9a472-8eb5-417c-8d8e-918a5443715a", "72621010Abac", "100.00", "107085023", "871452", "2.90", "121121", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", new string[] {
                "2949602"}, Category="2949602")]
        [NUnit.Framework.TestCaseAttribute("5283****9658", "true", "spisanie_za_obsl@qa.swiftcom.uk", "20b9a472-8eb5-417c-8d8e-918a5443715a", "72621010Abac", "100.00", "107085023", "871452", "2.90", "121121", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", new string[] {
                "433736"}, Category="433736")]
        public virtual void СписаниеЗаОбслуживаниеСКошелька(string card, string cardServicePeriod, string user, string userId, string password, string amount, string token, string userPurseId, string comission, string ePA_01Comissions, string systemPurseUserId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Списание за обслуживание с кошелька", exampleTags);
#line 622
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServicePeriod"});
            table59.AddRow(new string[] {
                        string.Format("{0}", token),
                        string.Format("{0}", cardServicePeriod)});
#line 625
   testRunner.Then("User updates records in table \'Cards\' and set CardServicePeriod:", ((string)(null)), table59, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServicePaid"});
            table60.AddRow(new string[] {
                        string.Format("{0}", token),
                        "NotPaid"});
#line 629
     testRunner.Then("User updates records in table \'Cards\' and set CardServicePaid:", ((string)(null)), table60, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServiceExpireAt"});
            table61.AddRow(new string[] {
                        string.Format("{0}", token),
                        "*yesterday-1d time 00.00.00*"});
#line 633
  testRunner.Then("User updates records in table \'Cards\' on \'yesterday-1d time 00.00.00\':", ((string)(null)), table61, "Then ");
#line 637
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 638
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 639
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 641
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 642
  testRunner.Given("User clicks on \"Обслуживание:\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 643
  testRunner.Then("Message \"Обслуживание:*today-2d*\" with replacing today-2d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 644
  testRunner.Then("Message \"Обслуживание карты ePayments не оплачено. Для продления обслуживания, по" +
                    "жалуйста, пополните кошелек на сумму в размере $ 2.9\" appears on \"USD\" card", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 647
  testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 649
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 650
  testRunner.Given("User clicks on \"Между своими счетами\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 651
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 655
  testRunner.Then("\'Со счета\' selector set to \'RUB\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 656
  testRunner.Then("\'На счет\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 657
  testRunner.Then("Section \'Received amount\' is: $ 0.00 (Курс обмена: ₽ 1.00 = $ **rate**)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 659
  testRunner.Then("\'Получаемая сумма\' set to \'100.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 661
  testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 663
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table62.AddRow(new string[] {
                        "Со счета",
                        string.Format("RUB, e-Wallet 001-{0}", userPurseId)});
            table62.AddRow(new string[] {
                        "На счет",
                        string.Format("USD, e-Wallet 001-{0}", userPurseId)});
            table62.AddRow(new string[] {
                        "Курс обмена",
                        "**rate**"});
            table62.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "₽ **amount / rate**"});
            table62.AddRow(new string[] {
                        "Получаемая сумма",
                        "$ 100.00"});
#line 665
  testRunner.Given("User see table", ((string)(null)), table62, "Given ");
#line 672
  testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 673
  testRunner.Then("Success message \"Обмен валют успешно выполнен×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 675
  testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 676
  testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table63.AddRow(new string[] {
                        "65",
                        "0.00",
                        string.Format("{0}", comission)});
#line 680
  testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table63, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table64.AddRow(new string[] {
                        "Successed",
                        string.Format("Service fee for ePayments Card {0}", card),
                        "WaveCrest",
                        string.Format("001-{0}", userPurseId),
                        "WaveCrest",
                        string.Format("000-{0}", ePA_01Comissions),
                        "Usd",
                        "EWallet",
                        "NotRecognized",
                        string.Format("{0}", userId)});
#line 683
  testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table64, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table65.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardServiceFee",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("1{0}", userPurseId),
                        "0"});
            table65.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardServiceFee",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", ePA_01Comissions),
                        "0"});
#line 688
    testRunner.Then(string.Format("New records appears in \'TPurseTransactions\' for UserId=\"{0}\":", userId), ((string)(null)), table65, "Then ");
#line 693
  testRunner.Then("No records in \'LimitRecords\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 695
  testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD"});
            table66.AddRow(new string[] {
                        "+97.1"});
#line 700
  testRunner.Then("eWallet updated USD section is:", ((string)(null)), table66, "Then ");
#line 705
  testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 706
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table67.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Обслуживание карты ePayments",
                        string.Format("- $ {0}", comission)});
            table67.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "$ 100.00"});
            table67.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод между секциями кошелька",
                        "- ₽ **amount / rate**"});
#line 707
  testRunner.Given("User see transactions list contains:", ((string)(null)), table67, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table68.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table68.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table68.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table68.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet 001-{0}", userPurseId)});
            table68.AddRow(new string[] {
                        "Получатель",
                        string.Format("000-{0}", ePA_01Comissions)});
            table68.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table68.AddRow(new string[] {
                        "Детали",
                        string.Format("Service fee for ePayments Card {0}", card)});
#line 713
   testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CardServiceFee\' r" +
                        "ow № 0 direction=\'out\':", userId), ((string)(null)), table68, "Given ");
#line 724
  testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 725
  testRunner.Given("User clicks on \"Обслуживание:\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 726
  testRunner.Then("Message \"Обслуживание:30.07.18\" with replacing on current month", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 727
  testRunner.Then("Message \"Сумма $ 2.9 будет списана автоматически в день окончания обслуживания.\" " +
                    "appears on \"USD\" card", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table69.AddRow(new string[] {
                        "Email",
                        "6",
                        string.Format("{0}", user),
                        "Отчет по операции № **TPurseTransactionId** for currency exchange and date"});
            table69.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table69.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81954f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e2",
                        "-"});
            table69.AddRow(new string[] {
                        "Email",
                        "8",
                        string.Format("{0}", user),
                        "Обслуживание карты ePayments продлено до 30.xx.2018"});
            table69.AddRow(new string[] {
                        "PushAndroid",
                        "8",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table69.AddRow(new string[] {
                        "PushIos",
                        "8",
                        "81954f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e2",
                        "-"});
#line 731
  testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TPurseTra" +
                        "nsactionId** for currency exchange and date\" replacing:", userId), ((string)(null)), table69, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Пополнение с внешней банковской карты")]
        [NUnit.Framework.CategoryAttribute("433738")]
        [NUnit.Framework.TestCaseAttribute("5413330000000019", "10.00", "0.26", "10.26", "356d33bd-e126-440c-9b9a-fe3fb1a27314", "454286", "000-454286", "144177", "122122", "406604", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", null)]
        public virtual void ПополнениеСВнешнейБанковскойКарты(string cardPAN, string amount, string comission, string amountComission, string userId, string userPurseId, string purseId, string ePS_02TemporaryStoragePurse, string ePS_06Exchanges, string ePS_01Commissions, string ePSUserId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "433738"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Пополнение с внешней банковской карты", @__tags);
#line 755
this.ScenarioSetup(scenarioInfo);
#line 758
 testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 759
 testRunner.Given("User signin \"Epayments\" with \"0609guzel@qa.swiftcom.uk\" password \"Qwerty@0609\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 760
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 761
 testRunner.Given("User clicks on Получить menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 764
 testRunner.Given("User clicks on \"С банковской карты\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 765
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table70.AddRow(new string[] {
                        "USD"});
            table70.AddRow(new string[] {
                        "EUR"});
            table70.AddRow(new string[] {
                        "RUB"});
#line 767
 testRunner.Given("\'На счет\' selector is \"USD\" and contains:", ((string)(null)), table70, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "CardNumber",
                        "CardExpireAt",
                        "CVC",
                        "CardHolder"});
            table71.AddRow(new string[] {
                        string.Format("{0}", cardPAN),
                        "01/20",
                        "589",
                        "Firstname LastName"});
#line 774
 testRunner.Then("User fills CardDetails:", ((string)(null)), table71, "Then ");
#line 778
 testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 779
 testRunner.Then(string.Format("Section \'Amount including fees\' is: $ {0} (Комиссия: $ 0.26)", amountComission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 780
    testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 782
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 783
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table72.AddRow(new string[] {
                        "На счет",
                        string.Format("USD, e-Wallet {0}", purseId)});
            table72.AddRow(new string[] {
                        "Банковская карта",
                        "Mastercard, x0019"});
            table72.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table72.AddRow(new string[] {
                        "Комиссия",
                        string.Format("$ {0}", comission)});
            table72.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amountComission)});
#line 785
 testRunner.Given("User see table", ((string)(null)), table72, "Given ");
#line 792
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 793
 testRunner.Given("User clicks on \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 796
    testRunner.Then("User proceed payment on MasterCard side with entering secure code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 797
 testRunner.Then("User gets message \"Обработка платежа займет несколько минут\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 798
 testRunner.Then("User gets message \"Перевод принят, средства зачислены на баланс кошелька\" on Mult" +
                    "iform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 799
    testRunner.Then("User redirected to account page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 802
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table73.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за входящий платеж с банковской карты",
                        "- $ 0.26"});
            table73.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Входящий платеж с банковской карты",
                        "$ 10.26"});
#line 803
  testRunner.Given("User see transactions list contains:", ((string)(null)), table73, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table74.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table74.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table74.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table74.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table74.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", purseId)});
            table74.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table74.AddRow(new string[] {
                        "Детали",
                        "Commission for incoming payment from sided bank card MasterCard, x0019"});
#line 808
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'RefillPurseFromEx" +
                        "ternalCardCommission\' row № 0 direction=\'out\':", userId), ((string)(null)), table74, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table75.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table75.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table75.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table75.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table75.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", purseId)});
            table75.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amountComission)});
            table75.AddRow(new string[] {
                        "Детали",
                        "Incoming payment from sided bank card MasterCard, x0019."});
#line 818
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'RefillPurseFromEx" +
                        "ternalCard\' row № 1 direction=\'in\':", userId), ((string)(null)), table75, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table76.AddRow(new string[] {
                        "51",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 833
 testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table76, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table77.AddRow(new string[] {
                        "Successed",
                        "Add funds to e-wallet 000-454286 with bank card 5413 33** **** 0019",
                        "Rietumu",
                        "5413 33** **** 0019",
                        "WaveCrest",
                        string.Format("{0}", purseId),
                        "Usd",
                        "BankCard",
                        "Purse",
                        string.Format("{0}", userId)});
#line 837
 testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table77, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table78.AddRow(new string[] {
                        string.Format("{0}", amountComission),
                        "RefillPurseFromExternalCard",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table78.AddRow(new string[] {
                        string.Format("{0}", amountComission),
                        "RefillPurseFromExternalCard",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table78.AddRow(new string[] {
                        string.Format("{0}", amountComission),
                        "RefillPurseFromExternalCard",
                        "in",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table78.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "RefillPurseFromExternalCardCommission",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table78.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "RefillPurseFromExternalCardCommission",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_01Commissions),
                        "0"});
#line 842
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table78, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table79.AddRow(new string[] {
                        "Usd",
                        "in",
                        "IncomingPaymentFromSidedBankCard",
                        string.Format("{0}", userId),
                        string.Format("{0}", amountComission),
                        "**Generated**",
                        "000-454286",
                        "Epid"});
#line 852
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table79, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table80.AddRow(new string[] {
                        string.Format("{0}", amountComission),
                        "Usd",
                        "Rietumu",
                        "true"});
#line 856
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table80, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table81.AddRow(new string[] {
                        "Email",
                        "10",
                        "0609guzel@qa.swiftcom.uk",
                        "Отчет по операции №**Invoice**"});
            table81.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "ftxRvwJltHs:APA91bHOt4NzBDRdxgNBd-e_QR_8f_7zD_HmnQh-OUMqKcGXatigFHVPQudsDS01EBd9V" +
                            "u9ITOyUY_ZyzTbCDhK5EhTKbphwCtTQIGiRJMwZWZxkUZ3lAqSdoiGHJu9uY47YsPqBdWrX",
                        "-"});
            table81.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "df9ead6dd3e79e617fa527eb570ecdbd89f560c1e9a0d6ccb94043ea866ce05c",
                        "-"});
#line 863
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table81, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Криптовалюта(котировки)")]
        [NUnit.Framework.CategoryAttribute("135431")]
        [NUnit.Framework.TestCaseAttribute("+70092039926", "72621010Abac", null)]
        public virtual void КриптовалютаКотировки(string user, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "135431"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Криптовалюта(котировки)", @__tags);
#line 879
  this.ScenarioSetup(scenarioInfo);
#line 884
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 885
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 886
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 888
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 889
 testRunner.Given("User clicks on \"На криптовалютный кошелек\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table82.AddRow(new string[] {
                        "USD"});
            table82.AddRow(new string[] {
                        "EUR"});
#line 891
 testRunner.Given("\'Со счета\' selector is \"USD\" and contains:", ((string)(null)), table82, "Given ");
#line 897
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BTC (Курс обмена: 1 BTC =\' and \'Коми" +
                    "ссия сети:\' for BTC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 898
 testRunner.Then("\'Получатель\' selector set to \'EURS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 899
 testRunner.Then("Section \'Amount including fees\' contains: \'0 EURS (Курс обмена: 1 EURS =\' and \'Ко" +
                    "миссия сети:\' for EURS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 901
 testRunner.Then("\'Получатель\' selector set to \'BTG\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 902
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BTG (Курс обмена: 1 BTG =\' and \'Коми" +
                    "ссия сети:\' for BTG", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 904
 testRunner.Then("\'Получатель\' selector set to \'BCH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 905
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BCH (Курс обмена: 1 BCH =\' and \'Коми" +
                    "ссия сети:\' for BCH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 907
 testRunner.Then("\'Получатель\' selector set to \'ETH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 908
 testRunner.Then("Section \'Amount including fees\' contains: \'0 ETH (Курс обмена: 1 ETH =\' and \'Коми" +
                    "ссия сети:\' for ETH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 910
 testRunner.Then("\'Получатель\' selector set to \'USDT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 911
 testRunner.Then("Section \'Amount including fees\' contains: \'0 USDT (Курс обмена: 1 USDT =\' and \'Ко" +
                    "миссия сети:\' for USDT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 913
 testRunner.Then("\'Получатель\' selector set to \'LTC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 914
 testRunner.Then("Section \'Amount including fees\' contains: \'0 LTC (Курс обмена: 1 LTC =\' and \'Коми" +
                    "ссия сети:\' for LTC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 916
 testRunner.Then("\'Со счета\' selector set to \'EUR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 918
 testRunner.Then("\'Получатель\' selector set to \'BTC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 919
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BTC (Курс обмена: 1 BTC =\' and \'Коми" +
                    "ссия сети:\' for BTC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 921
 testRunner.Then("\'Получатель\' selector set to \'EURS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 922
 testRunner.Then("Section \'Amount including fees\' contains: \'0 EURS (Курс обмена: 1 EURS =\' and \'Ко" +
                    "миссия сети:\' for EURS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 924
 testRunner.Then("\'Получатель\' selector set to \'BTG\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 925
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BTG (Курс обмена: 1 BTG =\' and \'Коми" +
                    "ссия сети:\' for BTG", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 927
 testRunner.Then("\'Получатель\' selector set to \'BCH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 928
 testRunner.Then("Section \'Amount including fees\' contains: \'0 BCH (Курс обмена: 1 BCH =\' and \'Коми" +
                    "ссия сети:\' for BCH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 930
 testRunner.Then("\'Получатель\' selector set to \'ETH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 931
 testRunner.Then("Section \'Amount including fees\' contains: \'0 ETH (Курс обмена: 1 ETH =\' and \'Коми" +
                    "ссия сети:\' for ETH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 933
 testRunner.Then("\'Получатель\' selector set to \'USDT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 934
 testRunner.Then("Section \'Amount including fees\' contains: \'0 USDT (Курс обмена: 1 USDT =\' and \'Ко" +
                    "миссия сети:\' for USDT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 936
 testRunner.Then("\'Получатель\' selector set to \'LTC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 937
 testRunner.Then("Section \'Amount including fees\' contains: \'0 LTC (Курс обмена: 1 LTC =\' and \'Коми" +
                    "ссия сети:\' for LTC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Зависший CardLoad (CloseCardLoad) - EUR")]
        [NUnit.Framework.CategoryAttribute("688031")]
        [NUnit.Framework.TestCaseAttribute("cardloaduser@qa.swiftcom.uk", "515e8853-c1bf-4ec8-8299-19f7fce2bfd3", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "10.00", "1792991", "1100", null)]
        public virtual void ЗависшийCardLoadCloseCardLoad_EUR(string user, string userId, string password, string systemPurseUserId, string amount, string userPurseId, string systemPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "688031"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Зависший CardLoad (CloseCardLoad) - EUR", @__tags);
#line 947
  this.ScenarioSetup(scenarioInfo);
#line 950
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 951
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 952
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 954
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 955
 testRunner.Given("User clicks on \"Пополнить\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 956
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 958
 testRunner.Then("\'Со счета\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 960
 testRunner.Then("\'На счет\' selector set to \'5283 **** 6603,  EUR\' in EPA cards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table83.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "€ 10.00"});
            table83.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "€ 7 778.00"});
            table83.AddRow(new string[] {
                        "Комиссия:",
                        "0%"});
#line 961
    testRunner.Given("User see limits table", ((string)(null)), table83, "Given ");
#line 966
    testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 967
 testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 968
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table84.AddRow(new string[] {
                        "Со счета",
                        "EUR, e-Wallet 001-792991"});
            table84.AddRow(new string[] {
                        "На счет",
                        "EUR, ePayments Card 5283****6603"});
            table84.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table84.AddRow(new string[] {
                        "Комиссия",
                        "€ 0.00"});
            table84.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amount)});
#line 969
 testRunner.Given("User see table", ((string)(null)), table84, "Given ");
#line 976
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 977
 testRunner.Then("Memorize EPACards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 979
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 980
 testRunner.Then("Success message \"Ваша карта успешно пополнена×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table85.AddRow(new string[] {
                        "Операция",
                        "Перевод на карту ePayments"});
            table85.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table85.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table85.AddRow(new string[] {
                        "Со счета",
                        "EUR, e-Wallet 001-792991"});
            table85.AddRow(new string[] {
                        "На счет",
                        "EUR, ePayments Card 5283****6603"});
            table85.AddRow(new string[] {
                        "Сумма",
                        string.Format("€ {0}", amount)});
            table85.AddRow(new string[] {
                        "Комиссия",
                        "€ 0.00"});
            table85.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("€ {0}", amount)});
#line 981
 testRunner.Given("User see quittance table", ((string)(null)), table85, "Given ");
#line 991
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table86.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", userId),
                        "Eur",
                        string.Format("{0}", userPurseId),
                        "0"});
            table86.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table86.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 996
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table86, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table87.AddRow(new string[] {
                        "Eur",
                        "in",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "e47a1fad-dc74-4614-ab4d-a706d5e7392c",
                        "Ecard"});
            table87.AddRow(new string[] {
                        "Eur",
                        "out",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "001-792991",
                        "Epid"});
#line 1003
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table87, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table88.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Eur",
                        "WaveCrest",
                        "false"});
#line 1008
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table88, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table89.AddRow(new string[] {
                        "0.00",
                        string.Format("-{0}", amount),
                        "0.00"});
#line 1013
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table89, "Then ");
#line 1017
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1019
 testRunner.Then("User gets record in \'EhiLog\' where Token=\"421775597\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table90.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**TXn_ID**"});
            table90.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table90.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 1020
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TXn_ID**\"" +
                        " replacing:", userId), ((string)(null)), table90, "Then ");
#line 1025
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1027
  testRunner.Then("Mark cardload as failed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1030
     testRunner.Then("Operator pushed on CloseCardLoad", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table91.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Eur",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 1033
  testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table91, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table92.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Eur",
                        "WaveCrest",
                        "false"});
#line 1037
  testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table92, "Then ");
#line 1041
 testRunner.Then("CardLoad status is true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1043
 testRunner.Then(string.Format("User didn\'t receive Notifications for UserId=\"{0}\"", userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Зависший CardLoad (Refund) - USD")]
        [NUnit.Framework.CategoryAttribute("3597456")]
        [NUnit.Framework.TestCaseAttribute("cardloadrefunda@qa.swiftcom.uk", "6a40a71a-60c8-4bab-89f6-f9cb1eea697d", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "10.00", "1347229", "1100", null)]
        public virtual void ЗависшийCardLoadRefund_USD(string user, string userId, string password, string systemPurseUserId, string amount, string userPurseId, string systemPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "3597456"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Зависший CardLoad (Refund) - USD", @__tags);
#line 1053
  this.ScenarioSetup(scenarioInfo);
#line 1056
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1057
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1058
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1060
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1061
 testRunner.Given("User clicks on \"Пополнить\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1062
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1064
 testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1066
 testRunner.Then("\'На счет\' selector set to \'5283 **** 1112,  USD\' in EPA cards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table93.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "$ 10.00"});
            table93.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "$ 15 000.00"});
            table93.AddRow(new string[] {
                        "Комиссия:",
                        "0%"});
#line 1067
    testRunner.Given("User see limits table", ((string)(null)), table93, "Given ");
#line 1072
    testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1073
 testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1074
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table94.AddRow(new string[] {
                        "Со счета",
                        "USD, e-Wallet 001-347229"});
            table94.AddRow(new string[] {
                        "На счет",
                        "USD, ePayments Card 5283****1112"});
            table94.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table94.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table94.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amount)});
#line 1075
 testRunner.Given("User see table", ((string)(null)), table94, "Given ");
#line 1082
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1083
 testRunner.Then("Memorize EPACards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1085
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1086
 testRunner.Then("Success message \"Ваша карта успешно пополнена×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table95.AddRow(new string[] {
                        "Операция",
                        "Перевод на карту ePayments"});
            table95.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table95.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table95.AddRow(new string[] {
                        "Со счета",
                        "USD, e-Wallet 001-347229"});
            table95.AddRow(new string[] {
                        "На счет",
                        "USD, ePayments Card 5283****1112"});
            table95.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table95.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table95.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amount)});
#line 1087
 testRunner.Given("User see quittance table", ((string)(null)), table95, "Given ");
#line 1097
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table96.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table96.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table96.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 1102
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table96, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table97.AddRow(new string[] {
                        "Usd",
                        "in",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "c362b556-f1d5-4b2e-a783-ff05008e47da",
                        "Ecard"});
            table97.AddRow(new string[] {
                        "Usd",
                        "out",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "001-347229",
                        "Epid"});
#line 1109
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table97, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table98.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Usd",
                        "WaveCrest",
                        "false"});
#line 1114
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table98, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table99.AddRow(new string[] {
                        string.Format("-{0}", amount),
                        "0.00",
                        "0.00"});
#line 1119
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table99, "Then ");
#line 1123
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1125
 testRunner.Then("User gets record in \'EhiLog\' where Token=\"204266834\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table100.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**TXn_ID**"});
            table100.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table100.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "5b9226dd520a42fdb72a4f8029fd8f216d6fbceed9154cb6be28ef21282e6283",
                        "-"});
#line 1126
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TXn_ID**\"" +
                        " replacing:", userId), ((string)(null)), table100, "Then ");
#line 1131
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1134
 testRunner.Then("Mark cardload as failed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1135
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1138
     testRunner.Then("Operator pushed on Refund transactions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table101.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "1"});
            table101.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "in",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "1"});
#line 1141
  testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table101, "Then ");
#line 1145
  testRunner.Then("No records in \'LimitRecords\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1146
  testRunner.Then("No new records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1147
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table102.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("$ {0}", amount)});
#line 1148
  testRunner.Given("User see transactions list contains:", ((string)(null)), table102, "Given ");
#line 1152
 testRunner.Then("CardLoad status is true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table103.AddRow(new string[] {
                        "+10.00",
                        "0.00",
                        "0.00"});
#line 1153
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table103, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table104.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table104.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "5b9226dd520a42fdb72a4f8029fd8f216d6fbceed9154cb6be28ef21282e6283",
                        "-"});
#line 1157
 testRunner.Then(string.Format("User selects records in table \'Notification\' for UserId=\"{0}\"", userId), ((string)(null)), table104, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Зависший CardLoad (Reload Funds) - USD")]
        [NUnit.Framework.CategoryAttribute("3597457")]
        [NUnit.Framework.TestCaseAttribute("reloadFundscardload@qa.swiftcom.uk", "d483f05a-d214-4978-b073-8f410cf5e808", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "10.00", "1056555", "1100", null)]
        public virtual void ЗависшийCardLoadReloadFunds_USD(string user, string userId, string password, string systemPurseUserId, string amount, string userPurseId, string systemPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "3597457"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Зависший CardLoad (Reload Funds) - USD", @__tags);
#line 1170
  this.ScenarioSetup(scenarioInfo);
#line 1173
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1174
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1175
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1177
 testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1178
 testRunner.Given("User clicks on \"Пополнить\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1179
 testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1182
 testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1184
 testRunner.Then("\'На счет\' selector set to \'5283 **** 4117,  USD\' in EPA cards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table105.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "$ 10.00"});
            table105.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "$ 15 000.00"});
            table105.AddRow(new string[] {
                        "Комиссия:",
                        "0%"});
#line 1185
    testRunner.Given("User see limits table", ((string)(null)), table105, "Given ");
#line 1190
    testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1191
 testRunner.Then(string.Format("\'Сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1192
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table106.AddRow(new string[] {
                        "Со счета",
                        "USD, e-Wallet 001-056555"});
            table106.AddRow(new string[] {
                        "На счет",
                        "USD, ePayments Card 5283****4117"});
            table106.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table106.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table106.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amount)});
#line 1193
 testRunner.Given("User see table", ((string)(null)), table106, "Given ");
#line 1200
 testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1202
 testRunner.Given("User clicks on \"Перевести\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1203
 testRunner.Then("Success message \"Ваша карта успешно пополнена×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table107.AddRow(new string[] {
                        "Операция",
                        "Перевод на карту ePayments"});
            table107.AddRow(new string[] {
                        "Дата",
                        "**yyyy-MM-dd HH:mm**"});
            table107.AddRow(new string[] {
                        "Статус",
                        "Успешно"});
            table107.AddRow(new string[] {
                        "Со счета",
                        "USD, e-Wallet 001-056555"});
            table107.AddRow(new string[] {
                        "На счет",
                        "USD, ePayments Card 5283****4117"});
            table107.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", amount)});
            table107.AddRow(new string[] {
                        "Комиссия",
                        "$ 0.00"});
            table107.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("$ {0}", amount)});
#line 1204
 testRunner.Given("User see quittance table", ((string)(null)), table107, "Given ");
#line 1214
 testRunner.Given("User clicks on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table108.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table108.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
            table108.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 1219
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table108, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table109.AddRow(new string[] {
                        "Usd",
                        "in",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "5e4e1434-05cf-4190-ab13-36d4558e947d",
                        "Ecard"});
            table109.AddRow(new string[] {
                        "Usd",
                        "out",
                        "CardLoad",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        "001-056555",
                        "Epid"});
#line 1226
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table109, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table110.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Usd",
                        "WaveCrest",
                        "false"});
#line 1231
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table110, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR",
                        "RUB"});
            table111.AddRow(new string[] {
                        string.Format("-{0}", amount),
                        "0.00",
                        "0.00"});
#line 1236
 testRunner.Then("eWallet updated sections are:", ((string)(null)), table111, "Then ");
#line 1240
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1242
 testRunner.Then("User gets record in \'EhiLog\' where Token=\"204209067\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table112.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**TXn_ID**"});
            table112.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table112.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 1243
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TXn_ID**\"" +
                        " replacing:", userId), ((string)(null)), table112, "Then ");
#line 1248
   testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1250
 testRunner.Then("Mark cardload as failed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1251
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1254
     testRunner.Then("Operator pushed on Reload Funds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table113.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CardLoad",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", systemPurseId),
                        "0"});
#line 1257
  testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table113, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table114.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "Usd",
                        "WaveCrest",
                        "false"});
#line 1260
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table114, "Then ");
#line 1264
   testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1265
 testRunner.Then("Wait because of different server time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table115.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("$ {0}", amount)});
            table115.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("- $ {0}", amount)});
            table115.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Пополнение карты ePayments",
                        string.Format("$ {0}", amount)});
#line 1266
 testRunner.Given("User see transactions list contains:", ((string)(null)), table115, "Given ");
#line 1272
 testRunner.Then("CardLoad status is true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table116.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "Отчет по операции №**TXn_ID**"});
            table116.AddRow(new string[] {
                        "PushAndroid",
                        "10",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra6N",
                        "-"});
            table116.AddRow(new string[] {
                        "PushIos",
                        "10",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e9",
                        "-"});
#line 1275
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TXn_ID**\"" +
                        " replacing:", userId), ((string)(null)), table116, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Списание за обслуживание с карты")]
        [NUnit.Framework.TestCaseAttribute("5283****0207", "false", "spisanie_za_obsl_s_karty@qa.swiftcom.uk", "977d6c33-e74a-436c-9b7e-b9fc6e2f6b69", "72621010Abac", "100.00", "110537447", "1108542", "2.90", "121121", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", new string[] {
                "433737"}, Category="433737")]
        [NUnit.Framework.TestCaseAttribute("5283****0207", "true", "spisanie_za_obsl_s_karty@qa.swiftcom.uk", "977d6c33-e74a-436c-9b7e-b9fc6e2f6b69", "72621010Abac", "100.00", "110537447", "1108542", "2.90", "121121", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", new string[] {
                "3663175"}, Category="3663175")]
        public virtual void СписаниеЗаОбслуживаниеСКарты(string card, string cardServicePeriod, string user, string userId, string password, string amount, string token, string userPurseId, string comission, string ePA_01Comissions, string systemPurseUserId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Списание за обслуживание с карты", exampleTags);
#line 1288
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServicePeriod"});
            table117.AddRow(new string[] {
                        string.Format("{0}", token),
                        string.Format("{0}", cardServicePeriod)});
#line 1291
   testRunner.Then("User updates records in table \'Cards\' and set CardServicePeriod:", ((string)(null)), table117, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServicePaid"});
            table118.AddRow(new string[] {
                        string.Format("{0}", token),
                        "NotPaid"});
#line 1295
     testRunner.Then("User updates records in table \'Cards\' and set CardServicePaid:", ((string)(null)), table118, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProxyPANCode",
                        "CardServiceExpireAt"});
            table119.AddRow(new string[] {
                        string.Format("{0}", token),
                        "*yesterday-1d time 00.00.00*"});
#line 1299
  testRunner.Then("User updates records in table \'Cards\' on \'yesterday-1d time 00.00.00\':", ((string)(null)), table119, "Then ");
#line 1303
     testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1304
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1305
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1307
  testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1308
  testRunner.Given("User clicks on \"Обслуживание:\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1309
  testRunner.Then("Message \"Обслуживание:*today-2d*\" with replacing today-2d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1310
  testRunner.Then("Message \"Обслуживание карты ePayments не оплачено. Для продления обслуживания, по" +
                    "жалуйста, пополните кошелек на сумму в размере $ 2.9\" appears on \"USD\" card", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1313
  testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1314
  testRunner.Then("Memorize EPACards section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1315
   testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1317
   testRunner.Then(string.Format("Partner load on Token = {0}", token), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1318
  testRunner.Then("Wait for transactions loading", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table120.AddRow(new string[] {
                        "65",
                        "0.00",
                        string.Format("{0}", comission)});
#line 1322
  testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table120, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table121.AddRow(new string[] {
                        "Successed",
                        string.Format("Service fee for ePayments Card {0}", card),
                        "WaveCrest",
                        "5283xxxxxxxx0207",
                        "WaveCrest",
                        string.Format("000-{0}", ePA_01Comissions),
                        "Usd",
                        "Card",
                        "NotRecognized",
                        string.Format("{0}", userId)});
#line 1325
  testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table121, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table122.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardUnload",
                        "in",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table122.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardServiceFee",
                        "out",
                        string.Format("{0}", userId),
                        "Usd",
                        string.Format("{0}", userPurseId),
                        "0"});
            table122.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "CardServiceFee",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", ePA_01Comissions),
                        "0"});
#line 1331
    testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table122, "Then ");
#line 1337
  testRunner.Then("No records in \'LimitRecords\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table123.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "Usd",
                        "WaveCrest",
                        "true"});
#line 1340
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table123, "Then ");
#line 1347
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1351
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table124.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Обслуживание карты ePayments",
                        string.Format("- $ {0}", comission)});
#line 1352
  testRunner.Given("User see transactions list contains:", ((string)(null)), table124, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "USD",
                        "EUR"});
            table125.AddRow(new string[] {
                        "+97.10",
                        "0.00"});
#line 1359
  testRunner.Then("EPA cards updated sections are:", ((string)(null)), table125, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table126.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table126.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table126.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table126.AddRow(new string[] {
                        "Продукт",
                        "e-Wallet 001-108542"});
            table126.AddRow(new string[] {
                        "Получатель",
                        string.Format("000-{0}", ePA_01Comissions)});
            table126.AddRow(new string[] {
                        "Сумма",
                        string.Format("$ {0}", comission)});
            table126.AddRow(new string[] {
                        "Детали",
                        string.Format("Service fee for ePayments Card {0}", card)});
#line 1363
     testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'CardServiceFee\' r" +
                        "ow № 0 direction=\'out\':", userId), ((string)(null)), table126, "Given ");
#line 1374
  testRunner.Then("User clicks on CardAndAccounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1375
  testRunner.Given("User clicks on \"Обслуживание:\" \"USD\" \'Epayments Cards\' at CardAndAccounts grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1376
  testRunner.Then("Message \"Обслуживание:30.06.18\" with replacing month", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1377
  testRunner.Then("Message \"Сумма $ 2.9 будет списана автоматически в день окончания обслуживания.\" " +
                    "appears on \"USD\" card", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table127.AddRow(new string[] {
                        "Email",
                        "10",
                        string.Format("{0}", user),
                        "-"});
            table127.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt61Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzddd7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK33W6kz-29FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table127.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "55954f64ce084e09330cd74a746708cb610c1c10db847ae57c69f58aa2d947e2",
                        "-"});
            table127.AddRow(new string[] {
                        "Email",
                        "8",
                        string.Format("{0}", user),
                        "Обслуживание карты ePayments продлено до **date**"});
            table127.AddRow(new string[] {
                        "PushAndroid",
                        "8",
                        "cLCkHIt61Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzddd7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPK33W6kz-29FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7T",
                        "-"});
            table127.AddRow(new string[] {
                        "PushIos",
                        "8",
                        "55954f64ce084e09330cd74a746708cb610c1c10db847ae57c69f58aa2d947e2",
                        "-"});
#line 1381
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**date**\" r" +
                        "eplacing:", userId), ((string)(null)), table127, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Вывод средств на мобильные телефоны")]
        [NUnit.Framework.CategoryAttribute("3414976")]
        [NUnit.Framework.TestCaseAttribute("0011234567", "60.00", "1.20", "61.20", "+70008971335", "85f871a2-69e6-406e-a90c-4f642105942a", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1697462", "001-697462", "144177", "122122", "406604", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", null)]
        public virtual void ВыводСредствНаМобильныеТелефоны(string phoneNumber, string amount, string comission, string amountComission, string user, string userId, string password, string systemPurseUserId, string userPurseId, string purseId, string ePS_02TemporaryStoragePurse, string ePS_06Exchanges, string ePS_01Commissions, string ePSUserId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "3414976"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Вывод средств на мобильные телефоны", @__tags);
#line 1410
this.ScenarioSetup(scenarioInfo);
#line 1411
  testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1412
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1413
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1415
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1416
  testRunner.Given("User clicks on \"На мобильный телефон\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1417
  testRunner.Then("Section \'Amount including fees\' is: ₽ 0.00 (Комиссия: ₽ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1420
  testRunner.Then("\'Со счета\' selector set to \'RUB\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1421
  testRunner.Then("\'Оператор\' selector set to \'MTS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1422
  testRunner.Then(string.Format("\'Телефон\' set to \'{0}\'", phoneNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1423
  testRunner.Then("\'Получаемая сумма\' selector set to \'RUB\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1424
  testRunner.Then(string.Format("\'Отдаваемая сумма\' set to \'{0}\'", amount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1426
  testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table128.AddRow(new string[] {
                        "Минимальная сумма перевода:",
                        "₽ 1.00"});
            table128.AddRow(new string[] {
                        "Максимальная сумма перевода:",
                        "₽ 5 000.00"});
            table128.AddRow(new string[] {
                        "Максимальная дневная сумма:",
                        "₽ 15 000.00"});
            table128.AddRow(new string[] {
                        "Максимальная сумма за 30 дн.:",
                        "₽ 60 000.00"});
            table128.AddRow(new string[] {
                        "Количество операций в день:",
                        "5"});
            table128.AddRow(new string[] {
                        "Комиссия:",
                        "2%"});
#line 1428
  testRunner.Given("User see limits table", ((string)(null)), table128, "Given ");
#line 1438
  testRunner.Then("\'Со счета\' selector set to \'EUR\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1439
  testRunner.Then(string.Format("Section \'Amount including fees\' is: € {0} (Комиссия: € {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1440
  testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1443
  testRunner.Then("\'Со счета\' selector set to \'USD\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1444
  testRunner.Then(string.Format("Section \'Amount including fees\' is: $ {0} (Комиссия: $ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1445
  testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1448
  testRunner.Then("\'Со счета\' selector set to \'RUB\' in eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1449
  testRunner.Then(string.Format("Section \'Amount including fees\' is: ₽ {0} (Комиссия: ₽ {1})", amountComission, comission), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1451
  testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table129.AddRow(new string[] {
                        "Отправитель",
                        string.Format("RUB, e-Wallet {0}", purseId)});
            table129.AddRow(new string[] {
                        "Получатель",
                        string.Format("+7{0}", phoneNumber)});
            table129.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", amount)});
            table129.AddRow(new string[] {
                        "Комиссия",
                        string.Format("₽ {0}", comission)});
            table129.AddRow(new string[] {
                        "Сумма с комиссией",
                        string.Format("₽ {0}", amountComission)});
            table129.AddRow(new string[] {
                        "Получаемая сумма",
                        string.Format("₽ {0}", amount)});
#line 1452
  testRunner.Given("User see table", ((string)(null)), table129, "Given ");
#line 1461
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1464
  testRunner.Given("User clicks on button \"Подтвердить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table130.AddRow(new string[] {
                        "MassPayment",
                        string.Format("{0}", user),
                        string.Format("{0}", userId),
                        "false"});
#line 1465
  testRunner.Then("User type SMS sent to:", ((string)(null)), table130, "Then ");
#line 1469
  testRunner.Then("Memorize eWallet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1470
  testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1471
  testRunner.Then("User gets message \"Обработка платежа займет несколько минут. Дождитесь результата" +
                    " перевода или продолжите работу в личном кабинете\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1472
  testRunner.Then("User gets message \"Платеж отправлен и находится в обработке. Срок зачисления сред" +
                    "ств может составлять от нескольких минут до нескольких дней. Вы получите уведомл" +
                    "ение по e-mail о результатах\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1476
  testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1477
  testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1479
  testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table131.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод на счет мобильного телефона",
                        string.Format("- ₽ {0}", comission)});
            table131.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод на счет мобильного телефона",
                        string.Format("- ₽ {0}", amount)});
#line 1480
  testRunner.Given("User see transactions list contains:", ((string)(null)), table131, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table132.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table132.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table132.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table132.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table132.AddRow(new string[] {
                        "Получатель",
                        string.Format("+7{0}", phoneNumber)});
            table132.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", comission)});
            table132.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing payment for mobile service MTS +7{0} from e-Wallet {1}.", phoneNumber, purseId)});
#line 1485
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'RefillMobileFromP" +
                        "urseFee\' row № 0 direction=\'out\':", userId), ((string)(null)), table132, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table133.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table133.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table133.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table133.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", purseId)});
            table133.AddRow(new string[] {
                        "Получатель",
                        string.Format("+7{0}", phoneNumber)});
            table133.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", amount)});
            table133.AddRow(new string[] {
                        "Детали",
                        string.Format("Outgoing payment for mobile service MTS +7{0} from e-Wallet {1}.", phoneNumber, purseId)});
#line 1495
  testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'RefillMobileFromP" +
                        "urse\' row № 1 direction=\'out\':", userId), ((string)(null)), table133, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table134.AddRow(new string[] {
                        "227",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 1505
  testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table134, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table135.AddRow(new string[] {
                        "WaitingForAutomaticAdmission",
                        "",
                        "WaveCrest",
                        string.Format("{0}", purseId),
                        "BankQiwi",
                        string.Format("+7{0}", phoneNumber),
                        "Rub",
                        "EWallet",
                        "Purse",
                        string.Format("{0}", userId)});
#line 1509
  testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table135, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table136.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "RefillMobileFromPurse",
                        "out",
                        string.Format("{0}", userId),
                        "Rub",
                        string.Format("{0}", userPurseId),
                        "0"});
            table136.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "RefillMobileFromPurse",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table136.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "RefillMobileFromPurseFee",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table136.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "RefillMobileFromPurseFee",
                        "out",
                        string.Format("{0}", userId),
                        "Rub",
                        string.Format("{0}", userPurseId),
                        "0"});
#line 1513
    testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table136, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table137.AddRow(new string[] {
                        "Rub",
                        "out",
                        "RefillMobileFromPurse",
                        string.Format("{0}", userId),
                        string.Format("{0}", amount),
                        "**Generated**",
                        string.Format("{0}", purseId),
                        "Epid"});
#line 1520
  testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table137, "Then ");
#line 1524
  testRunner.Then("No records in \'TExternalTransactions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Валидация формы ввода смс кода при подтверждении фин.операции V2")]
        [NUnit.Framework.TestCaseAttribute("000-637140", "+70027804391", "1.00", "10.00", "v2smsinternalpayment@qa.swiftcom.uk", "7d6d9819-9be1-47cd-8193-a4798274d39f", "72621010Abac", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "1063756", "001-063756", "122122", "144177", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", new string[] {
                "3286397"}, Category="3286397")]
        public virtual void ВалидацияФормыВводаСмсКодаПриПодтвержденииФин_ОперацииV2(string receiverPurse, string senderPhone, string comission, string amount, string user, string userId, string password, string systemPurseUserId, string userPurseId, string senderPurseId, string systemPurseId, string ePS_02TemporaryStoragePurse, string ePSUserId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Валидация формы ввода смс кода при подтверждении фин.операции V2", exampleTags);
#line 1532
   this.ScenarioSetup(scenarioInfo);
#line 1533
 testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1534
  testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1535
  testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1538
  testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1541
  testRunner.Given("User clicks on \"Другому человеку\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1542
  testRunner.Then("Section \'Amount including fees\' is: $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1543
  testRunner.Then("\'Получатель\' selector set to \'Телефон\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1546
  testRunner.Then("\'Получатель\' set to \'+70006533256\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1547
  testRunner.Then("\'Отдаваемая сумма\' set to \'10.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1548
   testRunner.Then("Section \'Amount including fees\' is: $ 11.00 (Комиссия: $ 1.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1549
  testRunner.Given("User clicks on \"Далее\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table138.AddRow(new string[] {
                        "Со счета",
                        string.Format("USD, e-Wallet {0}", senderPurseId)});
            table138.AddRow(new string[] {
                        "Получатель",
                        "+70006533256"});
            table138.AddRow(new string[] {
                        "Отдаваемая сумма",
                        "$ 10.00"});
            table138.AddRow(new string[] {
                        "Комиссия",
                        "$ 1.00"});
            table138.AddRow(new string[] {
                        "Сумма с комиссией",
                        "$ 11.00"});
            table138.AddRow(new string[] {
                        "Получаемая сумма",
                        "$ 10.00"});
#line 1550
  testRunner.Given("User see table", ((string)(null)), table138, "Given ");
#line 1558
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1559
  testRunner.Given("User clicks on \"Подтвердить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1562
 testRunner.Given("Button \"Оплатить\" is Disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1563
  testRunner.Then("User gets message \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1564
  testRunner.Given("User clicks on \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1567
  testRunner.Then("User gets message \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1568
  testRunner.Given("User clicks on \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1570
  testRunner.Then("User gets message \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1571
  testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1573
  testRunner.Given("User clicks on \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1575
  testRunner.Then("User gets message \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1576
  testRunner.Given("User clicks on \"Отправить код повторно\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1578
  testRunner.Then("Alert Message \"Код подтверждения отправлен\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table139.AddRow(new string[] {
                        "MassPayment",
                        "+70006533256",
                        string.Format("{0}", userId),
                        "false"});
#line 1579
    testRunner.Then("User type SMS sent to:", ((string)(null)), table139, "Then ");
#line 1585
  testRunner.Given("User clicks on \"Оплатить\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1586
  testRunner.Then("User gets message \"Платеж успешно отправлен\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
