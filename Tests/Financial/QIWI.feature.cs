// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ePayments.Tests.Web.Tests.Financial
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("QIWI")]
    [NUnit.Framework.CategoryAttribute("QIWI")]
    public partial class QIWIFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QIWI.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QIWI", "\t\tSending to QIWI", ProgrammingLanguage.CSharp, new string[] {
                        "QIWI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Валидация Массовый перевод QIWI (без конвертации)")]
        [NUnit.Framework.CategoryAttribute("2814956")]
        [NUnit.Framework.TestCaseAttribute("1020.00", "20.00", "1 000.00", "700000000000", "irentest76@qa.swiftcom.uk", "2EA47F03-143D-4F9F-9643-DA4A6E56B1EC", "123123Aaa", "000-952812", null)]
        public virtual void ВалидацияМассовыйПереводQIWIБезКонвертации(string amountComission, string comission, string amount, string qIWI, string user, string userId, string password, string userPurseId, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "2814956"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Валидация Массовый перевод QIWI (без конвертации)", @__tags);
#line 6
  this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Given("User clicks on \"В Visa QIWI Wallet\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Then("Section \'Amount including fees\' is: 0 $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "Min",
                        "Max",
                        "Fee"});
            table1.AddRow(new string[] {
                        "USD",
                        "$ 0.20",
                        "$ 3 500.00",
                        "2%"});
            table1.AddRow(new string[] {
                        "EUR",
                        "€ 0.20",
                        "€ 3 500.00",
                        "2%"});
            table1.AddRow(new string[] {
                        "RUB",
                        "₽ 1.00",
                        "₽ 250 000.00",
                        "2%"});
#line 17
 testRunner.Given("User see limits table at WebMoney mass payment", ((string)(null)), table1, "Given ");
#line 22
 testRunner.Then("Placeholder for \'Номер кошелька Qiwi\' is \'+\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table2.AddRow(new string[] {
                        "USD"});
            table2.AddRow(new string[] {
                        "EUR"});
            table2.AddRow(new string[] {
                        "RUB"});
#line 23
 testRunner.Given("\'Отдаваемая сумма\' selector is \"USD\" and contains:", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Options"});
            table3.AddRow(new string[] {
                        "USD"});
            table3.AddRow(new string[] {
                        "EUR"});
            table3.AddRow(new string[] {
                        "RUB"});
#line 28
 testRunner.Given("\'Получаемая сумма\' selector is \"USD\" and contains:", ((string)(null)), table3, "Given ");
#line 35
 testRunner.Given("User clicks on \"Загрузка CSV-файла с параметрами платежей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.Then("File \"QIWI-wrong-Ewallet.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.Then("Alert Message \"Строка 1: Кошелек не найден\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.Then("File \"QIWI-501.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.Then("Alert Message \"Максимальное количество платежей не должно превышать 500 за один п" +
                    "еревод\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.Then(string.Format("\'Номер кошелька Qiwi\' set to \'{0}\'", qIWI), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.Then("\'Отдаваемая сумма\' selector set to \'USD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.Then("\'Отдаваемая сумма\' set to \'500\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.Given("User clicks on \"Добавить платеж\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table4.AddRow(new string[] {
                        "1",
                        string.Format("{0}", qIWI),
                        "$ 500.00",
                        "$ 10.00",
                        "$ 500.00",
                        "$ 510.00",
                        "УДАЛИТЬ"});
#line 46
 testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table4, "Given ");
#line 50
 testRunner.Then(string.Format("\'Номер кошелька Qiwi\' set to \'{0}\'", qIWI), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.Then("\'Отдаваемая сумма\' selector set to \'RUB\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.Then("\'Отдаваемая сумма\' set to \'1000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
 testRunner.Given("User clicks on \"Добавить платеж\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table5.AddRow(new string[] {
                        "1",
                        string.Format("{0}", qIWI),
                        "$ 500.00",
                        "$ 10.00",
                        "$ 500.00",
                        "$ 510.00",
                        "УДАЛИТЬ"});
            table5.AddRow(new string[] {
                        "2",
                        string.Format("{0}", qIWI),
                        "₽ 1 000.00",
                        "₽ 20.00",
                        "$ **amount * rate**",
                        "₽ 1 020.00",
                        "УДАЛИТЬ"});
#line 55
 testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table5, "Given ");
#line 59
 testRunner.Then("Section \'Amount including fees\' is: 2 ₽ 1 020.00 + $ 510.00 (Комиссия: ₽ 20.00 + " +
                    "$ 10.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
  testRunner.Given("User clicks on button \"Удалить\" in table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table6.AddRow(new string[] {
                        "1",
                        string.Format("{0}", qIWI),
                        "₽ 1 000.00",
                        "₽ 20.00",
                        "$ **amount * rate**",
                        "₽ 1 020.00",
                        "УДАЛИТЬ"});
#line 64
  testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table6, "Given ");
#line 67
 testRunner.Then("Section \'Amount including fees\' is: 1 ₽ 1 020.00 (Комиссия: ₽ 20.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.Given("User clicks on \"Добавить платеж\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.Then("Validating message \'Заполните поле\' count is 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 73
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table7.AddRow(new string[] {
                        "MassPayment",
                        "+709890900054",
                        string.Format("{0}", userId),
                        "false"});
#line 76
    testRunner.Then("User type SMS sent to:", ((string)(null)), table7, "Then ");
#line 81
 testRunner.Given("User clicks on \"Назад\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table8.AddRow(new string[] {
                        "1",
                        string.Format("{0}", qIWI),
                        "₽ 1 000.00",
                        "₽ 20.00",
                        "$ **amount * rate**",
                        "₽ 1 020.00",
                        "УДАЛИТЬ"});
#line 82
 testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table8, "Given ");
#line 86
 testRunner.Then("EPA-6393", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 87
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table9.AddRow(new string[] {
                        "MassPayment",
                        "+709890900054",
                        string.Format("{0}", userId),
                        "false"});
#line 89
    testRunner.Then("User type SMS sent to:", ((string)(null)), table9, "Then ");
#line 92
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.Then("User gets message \"Обработка платежей завершена\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.Then("User gets message \"Выполнено 1 из 1\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
 testRunner.Then("User gets message \"Отправлено платежей: 1\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.Then("User gets message \"Не отправлено платежей: 0\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 99
   testRunner.Given("User closes multiform by clicking on \"Закрыть\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
 testRunner.Then("Redirected to /#/transfer/", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
 testRunner.Given("User clicks on Отчеты menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Name",
                        "Amount"});
            table10.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Комиссия за перевод в QIWI",
                        "- ₽ 20.00"});
            table10.AddRow(new string[] {
                        "**DD.MM.YY**",
                        "Перевод в QIWI",
                        "- ₽ 1 000.00"});
#line 103
 testRunner.Given("User see transactions list contains:", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table11.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table11.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table11.AddRow(new string[] {
                        "Внешний ID",
                        "**ExternalTransactionId**"});
            table11.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table11.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table11.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", qIWI)});
            table11.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", comission)});
            table11.AddRow(new string[] {
                        "Детали",
                        string.Format("Commission for outgoing payment to Visa Qiwi Wallet {0} from e-Wallet {1}. Amount" +
                                " transferred to Qiwi: $**amount * rate**, Rate: ₽1 = $**rate**.", qIWI, userPurseId)});
#line 108
    testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oQiwiFee\' row № 0 direction=\'out\':", userId), ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column1",
                        "Column2"});
            table12.AddRow(new string[] {
                        "Транзакция №",
                        "**TPurseTransactionId**"});
            table12.AddRow(new string[] {
                        "Заказ №",
                        "**InvoiceId**"});
            table12.AddRow(new string[] {
                        "Внешний ID",
                        "**ExternalTransactionId**"});
            table12.AddRow(new string[] {
                        "Дата",
                        "**dd.MM.yyyy HH:mm**"});
            table12.AddRow(new string[] {
                        "Продукт",
                        string.Format("e-Wallet {0}", userPurseId)});
            table12.AddRow(new string[] {
                        "Получатель",
                        string.Format("{0}", qIWI)});
            table12.AddRow(new string[] {
                        "Сумма",
                        string.Format("₽ {0}", amount)});
            table12.AddRow(new string[] {
                        "Детали",
                        string.Format("Outgoing payment to Visa Qiwi Wallet {0} from e-Wallet {1}. Amount transferred to" +
                                " Qiwi: $**amount * rate**, Rate: ₽1 = $**rate**.", qIWI, userPurseId)});
#line 119
 testRunner.Given(string.Format("User see statement info for the UserId={0} where DestinationId=\'OutgoingTransferT" +
                        "oQiwi\' row № 1 direction=\'out\':", userId), ((string)(null)), table12, "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Массовый перевод QIWI")]
        [NUnit.Framework.CategoryAttribute("433735")]
        [NUnit.Framework.TestCaseAttribute("1020.00", "20.00", "1000.00", "700000000000", "irentest76@qa.swiftcom.uk", "2EA47F03-143D-4F9F-9643-DA4A6E56B1EC", "99B4BB5F-2BE5-4481-9E78-F2E30339DC88", "F03ABC6E-25D6-4C98-A06F-A36B9B510BAF", "123123Aaa", "000-952812", "952812", "144177", "122122", "406604", null)]
        public virtual void МассовыйПереводQIWI(string amountComission, string comission, string amount, string qIWI, string user, string userId, string ePSUserId, string systemPurseUserId, string password, string userPurseId, string purseId, string ePS_02TemporaryStoragePurse, string ePS_06Exchanges, string ePS_01Commissions, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "433735"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Массовый перевод QIWI", @__tags);
#line 138
 this.ScenarioSetup(scenarioInfo);
#line 150
    testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.Given("User clicks on Перевести menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
 testRunner.Given("User clicks on \"В Visa QIWI Wallet\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 156
 testRunner.Then("Section \'Amount including fees\' is: 0 $ 0.00 (Комиссия: $ 0.00)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 159
 testRunner.Given("User clicks on \"Загрузка CSV-файла с параметрами платежей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.Then("File \"QIWI-3.csv\" uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table13.AddRow(new string[] {
                        "1",
                        "700000000001",
                        "$ 3.00",
                        "$ 0.06",
                        "$ 3.00",
                        "$ 3.06",
                        "УДАЛИТЬ"});
            table13.AddRow(new string[] {
                        "2",
                        "700000000001",
                        "€ 10.00",
                        "€ 0.20",
                        "€ 10.00",
                        "€ 10.20",
                        "УДАЛИТЬ"});
#line 161
 testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table13, "Given ");
#line 166
 testRunner.Then("Section \'Amount including fees\' is: 2 € 10.20 + $ 3.06 (Комиссия: € 0.20 + $ 0.06" +
                    ")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.Then(string.Format("\'Номер кошелька Qiwi\' set to \'{0}\'", qIWI), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
 testRunner.Then("\'Отдаваемая сумма\' selector set to \'RUB\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 170
 testRunner.Then("Currency rate placeholder appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
 testRunner.Then("\'Отдаваемая сумма\' set to \'1000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 172
 testRunner.Given("User clicks on \"Добавить платеж\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number",
                        "Recipient",
                        "OutgoingAmount",
                        "Fees",
                        "IncomingAmount",
                        "Total",
                        "Button"});
            table14.AddRow(new string[] {
                        "1",
                        "700000000001",
                        "$ 3.00",
                        "$ 0.06",
                        "$ 3.00",
                        "$ 3.06",
                        "УДАЛИТЬ"});
            table14.AddRow(new string[] {
                        "2",
                        "700000000001",
                        "€ 10.00",
                        "€ 0.20",
                        "€ 10.00",
                        "€ 10.20",
                        "УДАЛИТЬ"});
            table14.AddRow(new string[] {
                        "3",
                        string.Format("{0}", qIWI),
                        "₽ 1 000.00",
                        "₽ 20.00",
                        "$ **amount * rate**",
                        "₽ 1 020.00",
                        "УДАЛИТЬ"});
#line 173
 testRunner.Given("User see VISA QIWI Wallet receivers table", ((string)(null)), table14, "Given ");
#line 179
 testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.Given("User clicks on \"Далее\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationType",
                        "Recipient",
                        "UserId",
                        "IsUsed"});
            table15.AddRow(new string[] {
                        "MassPayment",
                        "+709890900054",
                        string.Format("{0}", userId),
                        "false"});
#line 182
 testRunner.Then("User type SMS sent to:", ((string)(null)), table15, "Then ");
#line 186
 testRunner.Given("User clicks on \"Оплатить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.Then("User gets message \"Обработка платежей завершена\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 189
 testRunner.Then("User gets message \"Выполнено 3 из 3\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 190
 testRunner.Then("User gets message \"Отправлено платежей: 3\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
 testRunner.Then("User gets message \"Не отправлено платежей: 0\" on Multiform", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 196
 testRunner.Given(string.Format("Check 1 of 3 transaction for last BatchOperationGuid where UserId=\"{0}\" and Recei" +
                        "verIdentity=\"700000000000\"", userId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperationTypeId",
                        "Amount",
                        "Fee"});
            table16.AddRow(new string[] {
                        "135",
                        string.Format("{0}", amount),
                        string.Format("{0}", comission)});
#line 197
 testRunner.Then("Preparing records in \'InvoicePositions\':", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "State",
                        "Details",
                        "SenderSystemId",
                        "SenderIdentity",
                        "ReceiverSystemId",
                        "ReceiverIdentity",
                        "CurrencyId",
                        "PaymentSource",
                        "ReceiverIdentityType",
                        "UserId"});
            table17.AddRow(new string[] {
                        "Successed",
                        "",
                        "WaveCrest",
                        string.Format("{0}", userPurseId),
                        "Qiwi",
                        string.Format("{0}", qIWI),
                        "Rub",
                        "EWallet",
                        "Purse",
                        string.Format("{0}", userId)});
#line 202
 testRunner.Then(string.Format("User selects last record in \'Invoices and InvoicePositions\' where UserId=\"{0}\":", userId), ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "DestinationId",
                        "Direction",
                        "UserId",
                        "CurrencyId",
                        "PurseId",
                        "RefundCount"});
            table18.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "OutgoingTransferToQiwi",
                        "out",
                        string.Format("{0}", userId),
                        "Rub",
                        string.Format("{0}", purseId),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "OutgoingTransferToQiwi",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToQiwiFee",
                        "out",
                        string.Format("{0}", userId),
                        "Rub",
                        string.Format("{0}", purseId),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToQiwiFee",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", amount),
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", systemPurseUserId),
                        "Rub",
                        string.Format("{0}", ePS_06Exchanges),
                        "0"});
            table18.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "out",
                        string.Format("{0}", systemPurseUserId),
                        "Usd",
                        string.Format("{0}", ePS_06Exchanges),
                        "0"});
            table18.AddRow(new string[] {
                        "**amount * rate**",
                        "CurrencyExchangeUsdAndEur",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        "**amount * rate**",
                        "OutgoingTransferToQiwi",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Usd",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToQiwiFee",
                        "out",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_02TemporaryStoragePurse),
                        "0"});
            table18.AddRow(new string[] {
                        string.Format("{0}", comission),
                        "OutgoingTransferToQiwiFee",
                        "in",
                        string.Format("{0}", ePSUserId),
                        "Rub",
                        string.Format("{0}", ePS_01Commissions),
                        "0"});
#line 208
   testRunner.Then(string.Format("User selects records in \'TPurseTransactions\' by last OperationGuid where UserId=\"" +
                        "{0}\":", userId), ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "CurrencyId",
                        "Direction",
                        "Destination",
                        "UserId",
                        "Amount",
                        "AmountInUsd",
                        "Product",
                        "ProductType"});
            table19.AddRow(new string[] {
                        "Usd",
                        "out",
                        "OutgoingTransferToQiwi",
                        string.Format("{0}", userId),
                        "**amount * rate**",
                        "**Generated**",
                        string.Format("{0}", userPurseId),
                        "Epid"});
#line 224
 testRunner.Then(string.Format("User selects records in \'LimitRecords\' by last OperationGuid where UserId=\"{0}\":", userId), ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Amount",
                        "CurrencyId",
                        "ExternalServiceId",
                        "IsIncomingTransaction"});
            table20.AddRow(new string[] {
                        "**amount * rate**",
                        "Usd",
                        "Qiwi",
                        "false"});
#line 229
 testRunner.Then("User selects records in \'TExternalTransactions\' by OperationGuid", ((string)(null)), table20, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table21.AddRow(new string[] {
                        "Sms",
                        "13",
                        "+709890900054",
                        "-"});
            table21.AddRow(new string[] {
                        "Email",
                        "6",
                        "irentest76@qa.swiftcom.uk",
                        "Отчет по операции"});
            table21.AddRow(new string[] {
                        "PushAndroid",
                        "6",
                        "cLCkHIt77Rg:APA91bH1wbbomcaNRtCx31-cBrYKXzdkk7I_H3zzlb7QK0tyZ7iCvXvQmypLfF0ehETKl" +
                            "UCSQkdmj-aPY59W6kz-38FsoM6svvxRv9PgPN7_GbVHovgbQS0Hqj-eJYXubjEtQXM9ra7D",
                        "-"});
            table21.AddRow(new string[] {
                        "PushIos",
                        "6",
                        "81944f64ce084e09720cd74a746708cb450c1c10db847ae57c69f58aa2d947e1",
                        "-"});
#line 236
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**Invoice**" +
                        "\" replacing:", userId), ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
