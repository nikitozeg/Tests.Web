// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ePayments.Tests.Web.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Tickets")]
    [NUnit.Framework.CategoryAttribute("Tickets")]
    public partial class TicketsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Tickets.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Tickets", null, ProgrammingLanguage.CSharp, new string[] {
                        "Tickets"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Zendesk")]
        [NUnit.Framework.CategoryAttribute("329213")]
        [NUnit.Framework.TestCaseAttribute("bizwm@qa.swiftcom.uk", "114551583954", "Title1", "Message1", "Title2", "Message2", "3.jpg", "a92ddb03-2a44-47d5-a5e7-cb1b15b36ff3", "72621010Abacc", "111111", null)]
        public virtual void Zendesk(string user, string authorId, string ticketSubject, string ticketMessage, string ticketSubject2, string ticketMessage2, string file, string userId, string password, string paymentpwd, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "329213"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zendesk", @__tags);
#line 5
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table1.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 7
   testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaId"});
            table2.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 10
    testRunner.Then("User deletes records in table \'EpaZendeskUser\':", ((string)(null)), table2, "Then ");
#line 13
     testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
    testRunner.Given("User clicks on \"Закрытые\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
    testRunner.Then("Message \"У вас нет закрытых тикетов\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
    testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
    testRunner.Then("Message \"У вас не создано ни одного тикета\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
    testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table3.AddRow(new string[] {
                        "",
                        "",
                        "\\1.pdf"});
#line 24
    testRunner.Then("User fills ticket details:", ((string)(null)), table3, "Then ");
#line 27
    testRunner.Then("Alert Message \"Размер загружаемого файла превышает максимально допустимое огранич" +
                    "ение в 10 Mb\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "\\2.txt"});
#line 28
    testRunner.Then("User fills ticket details:", ((string)(null)), table4, "Then ");
#line 31
    testRunner.Then("Alert Message \"Формат файла не поддерживается. Допустимы только файлы: JPG, JPEG," +
                    " PNG, PDF\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table5.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        ""});
#line 32
    testRunner.Then("User fills ticket details:", ((string)(null)), table5, "Then ");
#line 35
   testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
    testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table6.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
#line 37
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Body",
                        "AuthorId"});
            table7.AddRow(new string[] {
                        string.Format("{0}", ticketMessage),
                        string.Format("{0}", authorId)});
#line 40
    testRunner.Then(string.Format("Zendesk contains created ticket with Priority=\"normal\" and Title=\"{0}\"", ticketSubject), ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaId",
                        "ZendeskId",
                        "CreatedOn",
                        "UpdatedOn"});
            table8.AddRow(new string[] {
                        string.Format("{0}", userId),
                        string.Format("{0}", authorId),
                        "**DateTime**",
                        ""});
#line 43
    testRunner.Then(string.Format("User selects records in table \'EpaZendeskUser\' where EpaId=\"{0}\":", userId), ((string)(null)), table8, "Then ");
#line 46
   testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "EpaUserId",
                        "IsUnread",
                        "Subject",
                        "Status",
                        "CreatedAt",
                        "UpdatedAt",
                        "LastMessage",
                        "LastMessageByClient",
                        "CreatedViaChannel",
                        "Rating",
                        "RateMessage"});
            table9.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "0",
                        string.Format("{0}", ticketSubject),
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage),
                        "1",
                        "0",
                        "",
                        ""});
#line 47
    testRunner.Then(string.Format("User selects records in table \'EpaUserZendeskTicket\' where EpaUserId=\"{0}\":", userId), ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table10.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
#line 50
 testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TickedId*" +
                        "*\" replacing:", userId), ((string)(null)), table10, "Then ");
#line 56
    testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table11.AddRow(new string[] {
                        string.Format("{0}", ticketSubject2),
                        string.Format("{0}", ticketMessage2),
                        string.Format("\\{0}", file)});
#line 57
    testRunner.Then("User fills ticket details:", ((string)(null)), table11, "Then ");
#line 61
    testRunner.Given("User clicks on Отправить with attachment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table12.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("{0} {1}", ticketMessage2, file)});
#line 62
    testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject2), ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table13.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
            table13.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject2),
                        string.Format("{0}", ticketMessage2),
                        "Вы"});
#line 66
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Body",
                        "AuthorId"});
            table14.AddRow(new string[] {
                        string.Format("{0}", ticketMessage2),
                        string.Format("{0}", authorId)});
#line 70
    testRunner.Then(string.Format("Zendesk contains created ticket with Priority=\"normal\" and Title=\"{0}\"", ticketSubject2), ((string)(null)), table14, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "EpaUserId",
                        "IsUnread",
                        "Subject",
                        "Status",
                        "CreatedAt",
                        "UpdatedAt",
                        "LastMessage",
                        "LastMessageByClient",
                        "CreatedViaChannel",
                        "Rating",
                        "RateMessage"});
            table15.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "0",
                        string.Format("{0}", ticketSubject),
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage),
                        "1",
                        "0",
                        "",
                        ""});
            table15.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "0",
                        string.Format("{0}", ticketSubject2),
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage2),
                        "1",
                        "0",
                        "",
                        ""});
#line 73
    testRunner.Then(string.Format("User selects records in table \'EpaUserZendeskTicket\' where EpaUserId=\"{0}\":", userId), ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Priority",
                        "Status",
                        "GroupId",
                        "Operator_id",
                        "Subject",
                        "Body",
                        "RequesterId"});
            table16.AddRow(new string[] {
                        "high",
                        "new",
                        "114094375453",
                        "114343373873",
                        "Operator subject",
                        "Operator Body",
                        string.Format("{0}", authorId)});
#line 80
    testRunner.Then("Zendesk operator creates new ticket:", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Body",
                        "AuthorId"});
            table17.AddRow(new string[] {
                        "Operator Body",
                        "114343373873"});
#line 84
    testRunner.Then("Zendesk contains created ticket with Priority=\"high\" and Title=\"Operator subject\"" +
                    "", ((string)(null)), table17, "Then ");
#line 88
    testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table18.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
            table18.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject2),
                        string.Format("{0}", ticketMessage2),
                        "Вы"});
            table18.AddRow(new string[] {
                        "Тикет № **TICKET_ID**. Operator subject",
                        "Operator Body",
                        "Оператор службы поддержки"});
#line 89
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table18, "Then ");
#line 94
   testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "EpaUserId",
                        "IsUnread",
                        "Subject",
                        "Status",
                        "CreatedAt",
                        "UpdatedAt",
                        "LastMessage",
                        "LastMessageByClient",
                        "CreatedViaChannel",
                        "Rating",
                        "RateMessage"});
            table19.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "0",
                        string.Format("{0}", ticketSubject),
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage),
                        "1",
                        "0",
                        "",
                        ""});
            table19.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "0",
                        string.Format("{0}", ticketSubject2),
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage2),
                        "1",
                        "0",
                        "",
                        ""});
            table19.AddRow(new string[] {
                        "**Id**",
                        string.Format("{0}", userId),
                        "1",
                        "Operator subject",
                        "2",
                        "**DateTime**",
                        "**DateTime**",
                        "Operator Body",
                        "0",
                        "0",
                        "",
                        ""});
#line 95
    testRunner.Then(string.Format("User selects records in table \'EpaUserZendeskTicket\' where EpaUserId=\"{0}\":", userId), ((string)(null)), table19, "Then ");
#line 100
    testRunner.Then("Unread tickets messages \"1\" appears on sidebar and on active tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
    testRunner.Given("User clicks on \"Operator subject\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table20.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Operator Body"});
#line 102
    testRunner.Then("Tickets chat grid contains with Title \"Operator subject\":", ((string)(null)), table20, "Then ");
#line 108
 testRunner.Then("Zendesk operator close last created ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table21.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
            table21.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject2),
                        string.Format("{0}", ticketMessage2),
                        "Вы"});
#line 110
 testRunner.Then("Tickets overview grid contains:", ((string)(null)), table21, "Then ");
#line 114
 testRunner.Given("User clicks on \"Закрытые\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table22.AddRow(new string[] {
                        "Тикет № **TICKET_ID**. Operator subject",
                        "Operator Body",
                        "Оператор службы поддержки"});
#line 115
 testRunner.Then("Tickets closed tickets grid contains:", ((string)(null)), table22, "Then ");
#line 118
 testRunner.Given("User clicks on \"Operator subject\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table23.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Operator Body"});
#line 119
    testRunner.Then("Tickets chat grid contains with Title \"Operator subject\":", ((string)(null)), table23, "Then ");
#line 122
 testRunner.Given("User leave a rate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
 testRunner.Then("Make screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 124
 testRunner.Given("User clicks on \"Оценить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
  testRunner.Then("Success message \"Ваш отзыв получен, спасибо!×\" appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Сохранение документа из тикета на хол.сервер")]
        [NUnit.Framework.TestCaseAttribute("bizwm@qa.swiftcom.uk", "114551583954", "Incoming bank wire transfer (name)", "Message1", "3.jpg", "a92ddb03-2a44-47d5-a5e7-cb1b15b36ff3", "72621010Abacc", "111111", new string[] {
                "688093",
                "DeleteFTPTicketDocuments"}, Category="688093,DeleteFTPTicketDocuments")]
        [NUnit.Framework.TestCaseAttribute("bizwm@qa.swiftcom.uk", "114551583954", "Входящий банковский перевод ()", "Message1", "3.jpg", "a92ddb03-2a44-47d5-a5e7-cb1b15b36ff3", "72621010Abacc", "111111", new string[] {
                "2949603",
                "DeleteFTPTicketDocuments"}, Category="2949603,DeleteFTPTicketDocuments")]
        public virtual void СохранениеДокументаИзТикетаНаХол_Сервер(string user, string authorId, string ticketSubject, string ticketMessage, string file, string userId, string password, string paymentpwd, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Сохранение документа из тикета на хол.сервер", exampleTags);
#line 134
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table24.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 136
    testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table24, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaId"});
            table25.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 139
    testRunner.Then("User deletes records in table \'EpaZendeskUser\':", ((string)(null)), table25, "Then ");
#line 142
     testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
    testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
    testRunner.Then("Message \"У вас не создано ни одного тикета\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
    testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table26.AddRow(new string[] {
                        "FirstTicket",
                        string.Format("{0}", ticketMessage),
                        "\\zendesk.png"});
#line 151
    testRunner.Then("User fills ticket details:", ((string)(null)), table26, "Then ");
#line 155
    testRunner.Given("User clicks on Отправить with attachment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table27.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("{0} zendesk.png", ticketMessage)});
#line 156
    testRunner.Then("Tickets chat grid contains with Title \"FirstTicket\":", ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table28.AddRow(new string[] {
                        "Тикет № **TICKET_ID**. FirstTicket",
                        string.Format("{0}", ticketMessage),
                        "Вы"});
#line 160
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table28, "Then ");
#line 166
    testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table29.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        string.Format("\\{0}", file)});
#line 167
    testRunner.Then("User fills ticket details:", ((string)(null)), table29, "Then ");
#line 171
    testRunner.Given("User clicks on Отправить with attachment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table30.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("{0} {1}", ticketMessage, file)});
#line 172
    testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table30, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table31.AddRow(new string[] {
                        "Тикет № **TICKET_ID**. FirstTicket",
                        string.Format("{0}", ticketMessage),
                        "Вы"});
            table31.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
#line 176
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table31, "Then ");
#line 180
    testRunner.Then("Zendesk operator close last created ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 182
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table32.AddRow(new string[] {
                        "Тикет № **TICKET_ID**. FirstTicket",
                        string.Format("{0}", ticketMessage),
                        "Вы"});
#line 183
 testRunner.Then("Tickets overview grid contains:", ((string)(null)), table32, "Then ");
#line 186
 testRunner.Given("User clicks on \"Закрытые\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table33.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        "Вы"});
#line 187
 testRunner.Then("Tickets closed tickets grid contains:", ((string)(null)), table33, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketId",
                        "EpaUserId"});
            table34.AddRow(new string[] {
                        "**TICKET_ID**",
                        string.Format("{0}", userId)});
#line 192
 testRunner.Then("User selects records in table \'UserAttachment\' for last created ticket:", ((string)(null)), table34, "Then ");
#line 196
 testRunner.When(string.Format("Ftp dir \"/storages/WiredDocs/{0}/\" contains only {1} file", userId, file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EpaTicketsUpdater. Основные проверки")]
        [NUnit.Framework.CategoryAttribute("1341004")]
        [NUnit.Framework.TestCaseAttribute("ticketUIcheck@qa.swiftcom.uk", "114551583954", "Check update ticket tool", "Message for ticket tool", "f29d520c-b408-43e5-8004-eeb37bf98e6b", "72621010Abac", null)]
        public virtual void EpaTicketsUpdater_ОсновныеПроверки(string user, string authorId, string ticketSubject, string ticketMessage, string userId, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "1341004"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EpaTicketsUpdater. Основные проверки", @__tags);
#line 213
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table35.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 220
    testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table35, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaId"});
            table36.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 223
    testRunner.Then("User deletes records in table \'EpaZendeskUser\':", ((string)(null)), table36, "Then ");
#line 227
   testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 228
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 229
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
 testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
 testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table37.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        ""});
#line 236
  testRunner.Then("User fills ticket details:", ((string)(null)), table37, "Then ");
#line 239
    testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
    testRunner.Then("Zendesk operator \'114343373873\' replied with \'Public comment\' on created ticket w" +
                    "ith status \"open\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 243
    testRunner.Then("Zendesk operator \'114343373873\' puts internal comment \'Internal comment\' on creat" +
                    "ed ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 245
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table38.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        "Public comment",
                        "Оператор службы поддержки"});
#line 246
 testRunner.Then("Tickets overview grid contains:", ((string)(null)), table38, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table39.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "Message for ticket tool"});
            table39.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Public comment"});
#line 250
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table39, "Then ");
#line 255
  testRunner.When("User download and executes \"Tools.EpaTicketsUpdater\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table40.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "Message for ticket tool"});
            table40.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Public comment"});
#line 259
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table40, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table41.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
            table41.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
#line 264
 testRunner.Then(string.Format("After 10 seconds delay User selects records in table \'Notification\' where UserId=" +
                        "\"{0}\" with \"**TickedId**\" replacing:", userId), ((string)(null)), table41, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table42.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 272
 testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table42, "Then ");
#line 276
    testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 277
  testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table43.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        ""});
#line 279
 testRunner.Then("User fills ticket details:", ((string)(null)), table43, "Then ");
#line 283
    testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table44.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
#line 284
  testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TickedId*" +
                        "*\" replacing:", userId), ((string)(null)), table44, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table45.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 288
 testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table45, "Then ");
#line 292
   testRunner.Given("Set StartTime for DB search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 294
   testRunner.When("User executes \"Tools.EpaTicketsUpdater\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table46.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
#line 295
     testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TickedId*" +
                        "*\" replacing:", userId), ((string)(null)), table46, "Then ");
#line 298
   testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table47.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage)});
#line 299
    testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table47, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table48.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 305
 testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table48, "Then ");
#line 308
  testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 309
 testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table49.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        string.Format("{0}", ticketMessage),
                        ""});
#line 310
 testRunner.Then("User fills ticket details:", ((string)(null)), table49, "Then ");
#line 314
  testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
 testRunner.Then("Zendesk operator \'114343373873\' replied with \'Public comment 1\' on created ticket" +
                    " with status \"open\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 317
 testRunner.Then("Zendesk operator \'114343373873\' replied with \'Public comment 2\' on created ticket" +
                    " with status \"open\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 318
  testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 320
 testRunner.Then("User updates last comment in table \'EpaUserZendeskTicket\' on comment=\'Public comm" +
                    "ent 1\':", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 321
   testRunner.When("User executes \"Tools.EpaTicketsUpdater\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "MessageType",
                        "Priority",
                        "Receiver",
                        "Title"});
            table50.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
            table50.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
            table50.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
            table50.AddRow(new string[] {
                        "Email",
                        "4",
                        string.Format("{0}", user),
                        "Тикет № **TickedId**"});
#line 322
   testRunner.Then(string.Format("User selects records in table \'Notification\' where UserId=\"{0}\" with \"**TickedId*" +
                        "*\" replacing:", userId), ((string)(null)), table50, "Then ");
#line 329
  testRunner.Given("User clicks on Партнерская программа menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 330
 testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 331
  testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 332
  testRunner.Then("User see 1 unread comments in ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
  testRunner.Then("User clicks on last ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table51.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("{0}", ticketMessage)});
            table51.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Public comment 1"});
            table51.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "Public comment 2"});
#line 335
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table51, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Zendesk. Добавление комментария к тикету")]
        [NUnit.Framework.CategoryAttribute("329232")]
        [NUnit.Framework.TestCaseAttribute("ticketreplyuitest@qa.swiftcom.uk", "Title", "3.jpg", "8a363797-d716-4e28-a45f-ae33a06aa07b", "72621010Abac", null)]
        public virtual void Zendesk_ДобавлениеКомментарияКТикету(string user, string ticketSubject, string file, string userId, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "329232"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zendesk. Добавление комментария к тикету", @__tags);
#line 350
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaUserId"});
            table52.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 352
   testRunner.Then("User deletes records in table \'EpaUserZendeskTicket\':", ((string)(null)), table52, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "EpaId"});
            table53.AddRow(new string[] {
                        string.Format("{0}", userId)});
#line 355
    testRunner.Then("User deletes records in table \'EpaZendeskUser\':", ((string)(null)), table53, "Then ");
#line 358
     testRunner.Given("User goes to SignIn page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 359
 testRunner.Given(string.Format("User signin \"Epayments\" with \"{0}\" password \"{1}\"", user, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
 testRunner.Given("User see Account Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 361
    testRunner.Given("User clicks on \"Закрытые\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 362
    testRunner.Then("Message \"У вас нет закрытых тикетов\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 363
    testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 364
    testRunner.Then("Message \"У вас не создано ни одного тикета\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 367
    testRunner.Given("User clicks on ADD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TicketHeader",
                        "Message",
                        "File"});
            table54.AddRow(new string[] {
                        string.Format("{0}", ticketSubject),
                        "b",
                        ""});
#line 368
    testRunner.Then("User fills ticket details:", ((string)(null)), table54, "Then ");
#line 371
 testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table55.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        "b",
                        "Вы"});
#line 373
    testRunner.Then("Tickets overview grid contains:", ((string)(null)), table55, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table56.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
#line 376
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table56, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Body",
                        "AuthorId"});
            table57.AddRow(new string[] {
                        "b",
                        "366446552834"});
#line 379
 testRunner.Then(string.Format("Zendesk contains created ticket with Priority=\"normal\" and Title=\"{0}\"", ticketSubject), ((string)(null)), table57, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Message",
                        "File"});
            table58.AddRow(new string[] {
                        "-",
                        string.Format("\\{0}", file)});
#line 384
   testRunner.Then("User add comment in ticket", ((string)(null)), table58, "Then ");
#line 387
 testRunner.Given("Button \"Отправить\" is Disabled on ticket form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 388
 testRunner.Given("User clicks on Remove uploaded file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Message",
                        "File"});
            table59.AddRow(new string[] {
                        "c",
                        ""});
#line 391
   testRunner.Then("User add comment in ticket", ((string)(null)), table59, "Then ");
#line 394
    testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table60.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
            table60.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "c"});
#line 395
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table60, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Message",
                        "File"});
            table61.AddRow(new string[] {
                        "d",
                        string.Format("\\{0}", file)});
#line 401
 testRunner.Then("User add comment in ticket", ((string)(null)), table61, "Then ");
#line 404
 testRunner.Given("User clicks on Отправить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table62.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
            table62.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "c"});
            table62.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("d {0}", file)});
#line 405
 testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table62, "Then ");
#line 410
 testRunner.Then("Last ticket comment contains file URL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Body",
                        "AuthorId"});
            table63.AddRow(new string[] {
                        "b",
                        "366446552834"});
            table63.AddRow(new string[] {
                        "c",
                        "366446552834"});
            table63.AddRow(new string[] {
                        "d",
                        "366446552834"});
#line 412
 testRunner.Then(string.Format("Zendesk contains created ticket with Priority=\"normal\" and Title=\"{0}\" with attac" +
                        "hment", ticketSubject), ((string)(null)), table63, "Then ");
#line 422
   testRunner.Then("Zendesk operator \'114343373873\' replied with \'pending\' on created ticket with sta" +
                    "tus \"pending\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 423
   testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table64.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
            table64.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "c"});
            table64.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("d {0}", file)});
            table64.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "pending"});
#line 424
   testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table64, "Then ");
#line 431
    testRunner.Then("Zendesk operator \'114343373873\' replied with \'hold\' on created ticket with status" +
                    " \"hold\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 432
    testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table65.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
            table65.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "c"});
            table65.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("d {0}", file)});
            table65.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "pending"});
            table65.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "hold"});
#line 433
    testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table65, "Then ");
#line 441
  testRunner.Then("Zendesk operator \'114343373873\' replied with \'solved\' on created ticket with stat" +
                    "us \"solved\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 442
  testRunner.Then("User refresh the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "From",
                        "Date",
                        "ChatMessage"});
            table66.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "b"});
            table66.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        "c"});
            table66.AddRow(new string[] {
                        "Вы",
                        "**DateTime**",
                        string.Format("d {0}", file)});
            table66.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "pending"});
            table66.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "hold"});
            table66.AddRow(new string[] {
                        "Оператор службы поддержки",
                        "**DateTime**",
                        "solved"});
#line 443
  testRunner.Then(string.Format("Tickets chat grid contains with Title \"{0}\":", ticketSubject), ((string)(null)), table66, "Then ");
#line 451
     testRunner.Given("User clicks on \"Активные\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 453
 testRunner.Then("Message \"У вас не создано ни одного тикета\" appears on \"Служба поддержки\" view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 454
 testRunner.Given("User clicks on \"Закрытые\" in \"Служба поддержки\" grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "LastMessage",
                        "From"});
            table67.AddRow(new string[] {
                        string.Format("Тикет № **TICKET_ID**. {0}", ticketSubject),
                        "solved",
                        "Оператор службы поддержки"});
#line 455
 testRunner.Then("Tickets closed tickets grid contains:", ((string)(null)), table67, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
